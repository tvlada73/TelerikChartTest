//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace TelerikChartTest
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace TelerikChartTest.TelerikChartTest_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[188];
            _typeNameTable[0] = "Telerik.UI.Xaml.Controls.Chart.RadCartesianChart";
            _typeNameTable[1] = "Telerik.UI.Xaml.Controls.Chart.RadChartBase";
            _typeNameTable[2] = "Telerik.UI.Xaml.Controls.Chart.PresenterBase";
            _typeNameTable[3] = "Telerik.UI.Xaml.Controls.RadControl";
            _typeNameTable[4] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[5] = "Telerik.UI.Xaml.Controls.Chart.CartesianSeriesCollection";
            _typeNameTable[6] = "Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.CartesianSeries>";
            _typeNameTable[7] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.CartesianSeries>";
            _typeNameTable[8] = "Object";
            _typeNameTable[9] = "Telerik.UI.Xaml.Controls.Chart.CartesianSeries";
            _typeNameTable[10] = "Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries";
            _typeNameTable[11] = "Telerik.UI.Xaml.Controls.Chart.ChartSeries";
            _typeNameTable[12] = "Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter";
            _typeNameTable[13] = "Telerik.UI.Xaml.Controls.Chart.CartesianAxis";
            _typeNameTable[14] = "Telerik.UI.Xaml.Controls.Chart.LineAxis";
            _typeNameTable[15] = "Telerik.UI.Xaml.Controls.Chart.Axis";
            _typeNameTable[16] = "Windows.UI.Xaml.Style";
            _typeNameTable[17] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[18] = "Windows.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[19] = "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.DataTemplate>";
            _typeNameTable[20] = "System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.DataTemplate>";
            _typeNameTable[21] = "String";
            _typeNameTable[22] = "Boolean";
            _typeNameTable[23] = "Int32";
            _typeNameTable[24] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>";
            _typeNameTable[25] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>";
            _typeNameTable[26] = "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition";
            _typeNameTable[27] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[28] = "Telerik.UI.Xaml.Controls.Chart.DataPointBinding";
            _typeNameTable[29] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[30] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[31] = "Windows.UI.Xaml.VerticalAlignment";
            _typeNameTable[32] = "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelStrategy";
            _typeNameTable[33] = "System.Collections.IEnumerable";
            _typeNameTable[34] = "Telerik.UI.Xaml.Controls.Chart.ChartBehaviorCollection";
            _typeNameTable[35] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.ChartBehavior>";
            _typeNameTable[36] = "Telerik.UI.Xaml.Controls.Chart.ChartBehavior";
            _typeNameTable[37] = "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid";
            _typeNameTable[38] = "Telerik.UI.Xaml.Controls.Chart.ChartGrid";
            _typeNameTable[39] = "Telerik.UI.Xaml.Controls.Chart.IndicatorCollection";
            _typeNameTable[40] = "Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.IndicatorBase>";
            _typeNameTable[41] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.IndicatorBase>";
            _typeNameTable[42] = "Telerik.UI.Xaml.Controls.Chart.IndicatorBase";
            _typeNameTable[43] = "Telerik.Charting.DataPointCollection`1<Telerik.Charting.CategoricalDataPoint>";
            _typeNameTable[44] = "Telerik.Core.ElementCollection`1<Telerik.Charting.CategoricalDataPoint>";
            _typeNameTable[45] = "System.Collections.ObjectModel.Collection`1<Telerik.Charting.CategoricalDataPoint>";
            _typeNameTable[46] = "Telerik.Charting.CategoricalDataPoint";
            _typeNameTable[47] = "Telerik.Charting.CategoricalDataPointBase";
            _typeNameTable[48] = "Telerik.Charting.DataPoint";
            _typeNameTable[49] = "Telerik.Core.Node";
            _typeNameTable[50] = "Telerik.Core.PropertyBagObject";
            _typeNameTable[51] = "Double";
            _typeNameTable[52] = "Telerik.Core.IElementPresenter";
            _typeNameTable[53] = "Telerik.Core.NodeState";
            _typeNameTable[54] = "System.Enum";
            _typeNameTable[55] = "System.ValueType";
            _typeNameTable[56] = "Telerik.Core.RadRect";
            _typeNameTable[57] = "Telerik.Core.Element";
            _typeNameTable[58] = "Telerik.UI.Xaml.Controls.Chart.CartesianAnnotationCollection";
            _typeNameTable[59] = "Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>";
            _typeNameTable[60] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>";
            _typeNameTable[61] = "Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation";
            _typeNameTable[62] = "Telerik.UI.Xaml.Controls.Chart.ChartAnnotation";
            _typeNameTable[63] = "Telerik.UI.Xaml.Controls.Chart.ChartSeriesProvider";
            _typeNameTable[64] = "Telerik.UI.Xaml.Controls.Chart.ChartPalette";
            _typeNameTable[65] = "Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName";
            _typeNameTable[66] = "Telerik.UI.Xaml.Controls.Chart.ContainerVisualsFactory";
            _typeNameTable[67] = "Windows.Foundation.Size";
            _typeNameTable[68] = "Windows.Foundation.Point";
            _typeNameTable[69] = "Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior";
            _typeNameTable[70] = "Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode";
            _typeNameTable[71] = "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior";
            _typeNameTable[72] = "Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode";
            _typeNameTable[73] = "Telerik.UI.Xaml.Controls.Chart.TrackInfoMode";
            _typeNameTable[74] = "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis";
            _typeNameTable[75] = "Telerik.Charting.TimeInterval";
            _typeNameTable[76] = "Telerik.Charting.AxisPlotMode";
            _typeNameTable[77] = "Telerik.Charting.DateTimePlotStretchMode";
            _typeNameTable[78] = "System.DateTime";
            _typeNameTable[79] = "Telerik.Core.ValueRange`1<System.DateTime>";
            _typeNameTable[80] = "Telerik.Charting.AxisHorizontalLocation";
            _typeNameTable[81] = "Telerik.Charting.AxisVerticalLocation";
            _typeNameTable[82] = "Telerik.Charting.IContentFormatter";
            _typeNameTable[83] = "Telerik.Charting.ILabelCreator";
            _typeNameTable[84] = "Telerik.Charting.AxisLastLabelVisibility";
            _typeNameTable[85] = "Telerik.Charting.AxisLabelFitMode";
            _typeNameTable[86] = "Telerik.UI.Xaml.Controls.Chart.LinearAxis";
            _typeNameTable[87] = "Telerik.UI.Xaml.Controls.Chart.NumericalAxis";
            _typeNameTable[88] = "Telerik.Charting.NumericalAxisRangeExtendDirection";
            _typeNameTable[89] = "Telerik.Core.ValueRange`1<Double>";
            _typeNameTable[90] = "Telerik.UI.Xaml.Controls.Chart.GridLineVisibility";
            _typeNameTable[91] = "Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode";
            _typeNameTable[92] = "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.Brush>";
            _typeNameTable[93] = "System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.Brush>";
            _typeNameTable[94] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[95] = "Telerik.UI.Xaml.Controls.Chart.SplineSeries";
            _typeNameTable[96] = "Telerik.UI.Xaml.Controls.Chart.LineSeries";
            _typeNameTable[97] = "Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries";
            _typeNameTable[98] = "Telerik.UI.Xaml.Controls.Chart.CategoricalSeries";
            _typeNameTable[99] = "Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase";
            _typeNameTable[100] = "Windows.UI.Xaml.Media.DoubleCollection";
            _typeNameTable[101] = "Windows.UI.Xaml.Media.PenLineJoin";
            _typeNameTable[102] = "Telerik.Charting.ChartSeriesCombineMode";
            _typeNameTable[103] = "Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding";
            _typeNameTable[104] = "Telerik.UI.Xaml.Controls.Chart.ExponentialMovingAverageIndicator";
            _typeNameTable[105] = "Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase";
            _typeNameTable[106] = "Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase";
            _typeNameTable[107] = "Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase";
            _typeNameTable[108] = "TelerikChartTest.Controls.ChartUC";
            _typeNameTable[109] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[110] = "System.Collections.ObjectModel.ObservableCollection`1<TelerikChartTest.Models.ChartModel>";
            _typeNameTable[111] = "System.Collections.ObjectModel.Collection`1<TelerikChartTest.Models.ChartModel>";
            _typeNameTable[112] = "TelerikChartTest.Models.ChartModel";
            _typeNameTable[113] = "System.Collections.ObjectModel.ObservableCollection`1<TelerikChartTest.Models.ChartEvent>";
            _typeNameTable[114] = "System.Collections.ObjectModel.Collection`1<TelerikChartTest.Models.ChartEvent>";
            _typeNameTable[115] = "TelerikChartTest.Models.ChartEvent";
            _typeNameTable[116] = "TelerikChartTest.Helpers.Observable";
            _typeNameTable[117] = "Telerik.UI.Xaml.Controls.Chart.CategoricalAxis";
            _typeNameTable[118] = "Telerik.UI.Xaml.Controls.Chart.BarSeries";
            _typeNameTable[119] = "Telerik.UI.Xaml.Controls.Chart.SeriesPaletteMode";
            _typeNameTable[120] = "TelerikChartTest.Views.ChartPage";
            _typeNameTable[121] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[122] = "TelerikChartTest.ViewModels.ChartViewModel";
            _typeNameTable[123] = "TelerikChartTest.Views.MainPage";
            _typeNameTable[124] = "TelerikChartTest.ViewModels.MainViewModel";
            _typeNameTable[125] = "TelerikChartTest.Helpers.EnumToBooleanConverter";
            _typeNameTable[126] = "System.Type";
            _typeNameTable[127] = "System.Reflection.MemberInfo";
            _typeNameTable[128] = "TelerikChartTest.Views.SettingsPage";
            _typeNameTable[129] = "TelerikChartTest.ViewModels.SettingsViewModel";
            _typeNameTable[130] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[131] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[132] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[133] = "TelerikChartTest.Helpers.NavHelper";
            _typeNameTable[134] = "Windows.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[135] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[136] = "Microsoft.Xaml.Interactivity.Trigger";
            _typeNameTable[137] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[138] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[139] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[140] = "System.Windows.Input.ICommand";
            _typeNameTable[141] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[142] = "TelerikChartTest.Views.ShellPage";
            _typeNameTable[143] = "TelerikChartTest.ViewModels.ShellViewModel";
            _typeNameTable[144] = "Telerik.UI.Drawing.D2DResource";
            _typeNameTable[145] = "Telerik.UI.Drawing.D2DBrush";
            _typeNameTable[146] = "Telerik.UI.Drawing.D2DTextStyle";
            _typeNameTable[147] = "Telerik.UI.Drawing.FontWeightName";
            _typeNameTable[148] = "Windows.UI.Xaml.TextAlignment";
            _typeNameTable[149] = "Windows.UI.Text.FontStyle";
            _typeNameTable[150] = "Telerik.UI.Drawing.D2DShapeStyle";
            _typeNameTable[151] = "Telerik.UI.Drawing.D2DSolidColorBrush";
            _typeNameTable[152] = "Windows.UI.Color";
            _typeNameTable[153] = "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition";
            _typeNameTable[154] = "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation";
            _typeNameTable[155] = "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection";
            _typeNameTable[156] = "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>";
            _typeNameTable[157] = "Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition";
            _typeNameTable[158] = "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase";
            _typeNameTable[159] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[160] = "Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition";
            _typeNameTable[161] = "Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition";
            _typeNameTable[162] = "Telerik.UI.Xaml.Controls.Input.HighlightStyle";
            _typeNameTable[163] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[164] = "Telerik.UI.Xaml.Controls.Input.FontWeightName";
            _typeNameTable[165] = "Telerik.UI.Xaml.Controls.Input.CalendarCellStyle";
            _typeNameTable[166] = "Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector";
            _typeNameTable[167] = "Windows.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[168] = "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu";
            _typeNameTable[169] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>";
            _typeNameTable[170] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>";
            _typeNameTable[171] = "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem";
            _typeNameTable[172] = "Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject";
            _typeNameTable[173] = "Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService";
            _typeNameTable[174] = "Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[175] = "Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[176] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[177] = "Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[178] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>";
            _typeNameTable[179] = "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>";
            _typeNameTable[180] = "System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>";
            _typeNameTable[181] = "Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>";
            _typeNameTable[182] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[183] = "Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior";
            _typeNameTable[184] = "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>";
            _typeNameTable[185] = "Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers";
            _typeNameTable[186] = "Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter";
            _typeNameTable[187] = "Windows.UI.Xaml.Media.Animation.Storyboard";

            _typeTable = new global::System.Type[188];
            _typeTable[0] = typeof(global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart);
            _typeTable[1] = typeof(global::Telerik.UI.Xaml.Controls.Chart.RadChartBase);
            _typeTable[2] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PresenterBase);
            _typeTable[3] = typeof(global::Telerik.UI.Xaml.Controls.RadControl);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[5] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CartesianSeriesCollection);
            _typeTable[6] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PresenterCollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries>);
            _typeTable[7] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries>);
            _typeTable[8] = typeof(global::System.Object);
            _typeTable[9] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries);
            _typeTable[10] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries);
            _typeTable[11] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartSeries);
            _typeTable[12] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter);
            _typeTable[13] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis);
            _typeTable[14] = typeof(global::Telerik.UI.Xaml.Controls.Chart.LineAxis);
            _typeTable[15] = typeof(global::Telerik.UI.Xaml.Controls.Chart.Axis);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[19] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.DataTemplate>);
            _typeTable[20] = typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.DataTemplate>);
            _typeTable[21] = typeof(global::System.String);
            _typeTable[22] = typeof(global::System.Boolean);
            _typeTable[23] = typeof(global::System.Int32);
            _typeTable[24] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>);
            _typeTable[25] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>);
            _typeTable[26] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition);
            _typeTable[27] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[28] = typeof(global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.VerticalAlignment);
            _typeTable[32] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelStrategy);
            _typeTable[33] = typeof(global::System.Collections.IEnumerable);
            _typeTable[34] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartBehaviorCollection);
            _typeTable[35] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior>);
            _typeTable[36] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior);
            _typeTable[37] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid);
            _typeTable[38] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartGrid);
            _typeTable[39] = typeof(global::Telerik.UI.Xaml.Controls.Chart.IndicatorCollection);
            _typeTable[40] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PresenterCollection<global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase>);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase>);
            _typeTable[42] = typeof(global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase);
            _typeTable[43] = typeof(global::Telerik.Charting.DataPointCollection<global::Telerik.Charting.CategoricalDataPoint>);
            _typeTable[44] = typeof(global::Telerik.Core.ElementCollection<global::Telerik.Charting.CategoricalDataPoint>);
            _typeTable[45] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.Charting.CategoricalDataPoint>);
            _typeTable[46] = typeof(global::Telerik.Charting.CategoricalDataPoint);
            _typeTable[47] = typeof(global::Telerik.Charting.CategoricalDataPointBase);
            _typeTable[48] = typeof(global::Telerik.Charting.DataPoint);
            _typeTable[49] = typeof(global::Telerik.Core.Node);
            _typeTable[50] = typeof(global::Telerik.Core.PropertyBagObject);
            _typeTable[51] = typeof(global::System.Double);
            _typeTable[52] = typeof(global::Telerik.Core.IElementPresenter);
            _typeTable[53] = typeof(global::Telerik.Core.NodeState);
            _typeTable[54] = typeof(global::System.Enum);
            _typeTable[55] = typeof(global::System.ValueType);
            _typeTable[56] = typeof(global::Telerik.Core.RadRect);
            _typeTable[57] = typeof(global::Telerik.Core.Element);
            _typeTable[58] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CartesianAnnotationCollection);
            _typeTable[59] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PresenterCollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>);
            _typeTable[60] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>);
            _typeTable[61] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation);
            _typeTable[62] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotation);
            _typeTable[63] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesProvider);
            _typeTable[64] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartPalette);
            _typeTable[65] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName);
            _typeTable[66] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ContainerVisualsFactory);
            _typeTable[67] = typeof(global::Windows.Foundation.Size);
            _typeTable[68] = typeof(global::Windows.Foundation.Point);
            _typeTable[69] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior);
            _typeTable[70] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode);
            _typeTable[71] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior);
            _typeTable[72] = typeof(global::Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode);
            _typeTable[73] = typeof(global::Telerik.UI.Xaml.Controls.Chart.TrackInfoMode);
            _typeTable[74] = typeof(global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis);
            _typeTable[75] = typeof(global::Telerik.Charting.TimeInterval);
            _typeTable[76] = typeof(global::Telerik.Charting.AxisPlotMode);
            _typeTable[77] = typeof(global::Telerik.Charting.DateTimePlotStretchMode);
            _typeTable[78] = typeof(global::System.DateTime);
            _typeTable[79] = typeof(global::Telerik.Core.ValueRange<global::System.DateTime>);
            _typeTable[80] = typeof(global::Telerik.Charting.AxisHorizontalLocation);
            _typeTable[81] = typeof(global::Telerik.Charting.AxisVerticalLocation);
            _typeTable[82] = typeof(global::Telerik.Charting.IContentFormatter);
            _typeTable[83] = typeof(global::Telerik.Charting.ILabelCreator);
            _typeTable[84] = typeof(global::Telerik.Charting.AxisLastLabelVisibility);
            _typeTable[85] = typeof(global::Telerik.Charting.AxisLabelFitMode);
            _typeTable[86] = typeof(global::Telerik.UI.Xaml.Controls.Chart.LinearAxis);
            _typeTable[87] = typeof(global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis);
            _typeTable[88] = typeof(global::Telerik.Charting.NumericalAxisRangeExtendDirection);
            _typeTable[89] = typeof(global::Telerik.Core.ValueRange<global::System.Double>);
            _typeTable[90] = typeof(global::Telerik.UI.Xaml.Controls.Chart.GridLineVisibility);
            _typeTable[91] = typeof(global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode);
            _typeTable[92] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Brush>);
            _typeTable[93] = typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.Media.Brush>);
            _typeTable[94] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[95] = typeof(global::Telerik.UI.Xaml.Controls.Chart.SplineSeries);
            _typeTable[96] = typeof(global::Telerik.UI.Xaml.Controls.Chart.LineSeries);
            _typeTable[97] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries);
            _typeTable[98] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeries);
            _typeTable[99] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase);
            _typeTable[100] = typeof(global::Windows.UI.Xaml.Media.DoubleCollection);
            _typeTable[101] = typeof(global::Windows.UI.Xaml.Media.PenLineJoin);
            _typeTable[102] = typeof(global::Telerik.Charting.ChartSeriesCombineMode);
            _typeTable[103] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding);
            _typeTable[104] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ExponentialMovingAverageIndicator);
            _typeTable[105] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase);
            _typeTable[106] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase);
            _typeTable[107] = typeof(global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase);
            _typeTable[108] = typeof(global::TelerikChartTest.Controls.ChartUC);
            _typeTable[109] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[110] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel>);
            _typeTable[111] = typeof(global::System.Collections.ObjectModel.Collection<global::TelerikChartTest.Models.ChartModel>);
            _typeTable[112] = typeof(global::TelerikChartTest.Models.ChartModel);
            _typeTable[113] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartEvent>);
            _typeTable[114] = typeof(global::System.Collections.ObjectModel.Collection<global::TelerikChartTest.Models.ChartEvent>);
            _typeTable[115] = typeof(global::TelerikChartTest.Models.ChartEvent);
            _typeTable[116] = typeof(global::TelerikChartTest.Helpers.Observable);
            _typeTable[117] = typeof(global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis);
            _typeTable[118] = typeof(global::Telerik.UI.Xaml.Controls.Chart.BarSeries);
            _typeTable[119] = typeof(global::Telerik.UI.Xaml.Controls.Chart.SeriesPaletteMode);
            _typeTable[120] = typeof(global::TelerikChartTest.Views.ChartPage);
            _typeTable[121] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[122] = typeof(global::TelerikChartTest.ViewModels.ChartViewModel);
            _typeTable[123] = typeof(global::TelerikChartTest.Views.MainPage);
            _typeTable[124] = typeof(global::TelerikChartTest.ViewModels.MainViewModel);
            _typeTable[125] = typeof(global::TelerikChartTest.Helpers.EnumToBooleanConverter);
            _typeTable[126] = typeof(global::System.Type);
            _typeTable[127] = typeof(global::System.Reflection.MemberInfo);
            _typeTable[128] = typeof(global::TelerikChartTest.Views.SettingsPage);
            _typeTable[129] = typeof(global::TelerikChartTest.ViewModels.SettingsViewModel);
            _typeTable[130] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[131] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[132] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[133] = typeof(global::TelerikChartTest.Helpers.NavHelper);
            _typeTable[134] = typeof(global::Windows.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[135] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[136] = typeof(global::Microsoft.Xaml.Interactivity.Trigger);
            _typeTable[137] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[138] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[139] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[140] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[141] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[142] = typeof(global::TelerikChartTest.Views.ShellPage);
            _typeTable[143] = typeof(global::TelerikChartTest.ViewModels.ShellViewModel);
            _typeTable[144] = typeof(global::Telerik.UI.Drawing.D2DResource);
            _typeTable[145] = typeof(global::Telerik.UI.Drawing.D2DBrush);
            _typeTable[146] = typeof(global::Telerik.UI.Drawing.D2DTextStyle);
            _typeTable[147] = typeof(global::Telerik.UI.Drawing.FontWeightName);
            _typeTable[148] = typeof(global::Windows.UI.Xaml.TextAlignment);
            _typeTable[149] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[150] = typeof(global::Telerik.UI.Drawing.D2DShapeStyle);
            _typeTable[151] = typeof(global::Telerik.UI.Drawing.D2DSolidColorBrush);
            _typeTable[152] = typeof(global::Windows.UI.Color);
            _typeTable[153] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition);
            _typeTable[154] = typeof(global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation);
            _typeTable[155] = typeof(global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection);
            _typeTable[156] = typeof(global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>);
            _typeTable[157] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition);
            _typeTable[158] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase);
            _typeTable[159] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[160] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition);
            _typeTable[161] = typeof(global::Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition);
            _typeTable[162] = typeof(global::Telerik.UI.Xaml.Controls.Input.HighlightStyle);
            _typeTable[163] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[164] = typeof(global::Telerik.UI.Xaml.Controls.Input.FontWeightName);
            _typeTable[165] = typeof(global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle);
            _typeTable[166] = typeof(global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector);
            _typeTable[167] = typeof(global::Windows.UI.Xaml.Controls.StyleSelector);
            _typeTable[168] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu);
            _typeTable[169] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>);
            _typeTable[170] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>);
            _typeTable[171] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem);
            _typeTable[172] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject);
            _typeTable[173] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService);
            _typeTable[174] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[175] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.ServiceBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[176] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[177] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.CommandCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[178] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>);
            _typeTable[179] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>);
            _typeTable[180] = typeof(global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>);
            _typeTable[181] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>);
            _typeTable[182] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[183] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior);
            _typeTable[184] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Windows.UI.Xaml.FrameworkElement>);
            _typeTable[185] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers);
            _typeTable[186] = typeof(global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter);
            _typeTable[187] = typeof(global::Windows.UI.Xaml.Media.Animation.Storyboard);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_RadCartesianChart() { return new global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart(); }
        private object Activate_7_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries>(); }
        private object Activate_19_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.DataTemplate>(); }
        private object Activate_20_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.DataTemplate>(); }
        private object Activate_24_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>(); }
        private object Activate_25_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>(); }
        private object Activate_26_ChartSeriesLabelDefinition() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition(); }
        private object Activate_35_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior>(); }
        private object Activate_37_CartesianChartGrid() { return new global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid(); }
        private object Activate_41_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase>(); }
        private object Activate_45_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.Charting.CategoricalDataPoint>(); }
        private object Activate_46_CategoricalDataPoint() { return new global::Telerik.Charting.CategoricalDataPoint(); }
        private object Activate_60_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>(); }
        private object Activate_63_ChartSeriesProvider() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesProvider(); }
        private object Activate_64_ChartPalette() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartPalette(); }
        private object Activate_66_ContainerVisualsFactory() { return new global::Telerik.UI.Xaml.Controls.Chart.ContainerVisualsFactory(); }
        private object Activate_69_ChartPanAndZoomBehavior() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior(); }
        private object Activate_71_ChartTrackBallBehavior() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior(); }
        private object Activate_74_DateTimeContinuousAxis() { return new global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis(); }
        private object Activate_86_LinearAxis() { return new global::Telerik.UI.Xaml.Controls.Chart.LinearAxis(); }
        private object Activate_92_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.Brush>(); }
        private object Activate_93_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.Media.Brush>(); }
        private object Activate_95_SplineSeries() { return new global::Telerik.UI.Xaml.Controls.Chart.SplineSeries(); }
        private object Activate_96_LineSeries() { return new global::Telerik.UI.Xaml.Controls.Chart.LineSeries(); }
        private object Activate_103_PropertyNameDataPointBinding() { return new global::Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding(); }
        private object Activate_104_ExponentialMovingAverageIndicator() { return new global::Telerik.UI.Xaml.Controls.Chart.ExponentialMovingAverageIndicator(); }
        private object Activate_108_ChartUC() { return new global::TelerikChartTest.Controls.ChartUC(); }
        private object Activate_110_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel>(); }
        private object Activate_111_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TelerikChartTest.Models.ChartModel>(); }
        private object Activate_112_ChartModel() { return new global::TelerikChartTest.Models.ChartModel(); }
        private object Activate_113_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartEvent>(); }
        private object Activate_114_Collection() { return new global::System.Collections.ObjectModel.Collection<global::TelerikChartTest.Models.ChartEvent>(); }
        private object Activate_115_ChartEvent() { return new global::TelerikChartTest.Models.ChartEvent(); }
        private object Activate_116_Observable() { return new global::TelerikChartTest.Helpers.Observable(); }
        private object Activate_117_CategoricalAxis() { return new global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis(); }
        private object Activate_118_BarSeries() { return new global::Telerik.UI.Xaml.Controls.Chart.BarSeries(); }
        private object Activate_120_ChartPage() { return new global::TelerikChartTest.Views.ChartPage(); }
        private object Activate_122_ChartViewModel() { return new global::TelerikChartTest.ViewModels.ChartViewModel(); }
        private object Activate_123_MainPage() { return new global::TelerikChartTest.Views.MainPage(); }
        private object Activate_124_MainViewModel() { return new global::TelerikChartTest.ViewModels.MainViewModel(); }
        private object Activate_125_EnumToBooleanConverter() { return new global::TelerikChartTest.Helpers.EnumToBooleanConverter(); }
        private object Activate_128_SettingsPage() { return new global::TelerikChartTest.Views.SettingsPage(); }
        private object Activate_129_SettingsViewModel() { return new global::TelerikChartTest.ViewModels.SettingsViewModel(); }
        private object Activate_131_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_133_NavHelper() { return new global::TelerikChartTest.Helpers.NavHelper(); }
        private object Activate_135_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_138_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_139_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_142_ShellPage() { return new global::TelerikChartTest.Views.ShellPage(); }
        private object Activate_143_ShellViewModel() { return new global::TelerikChartTest.ViewModels.ShellViewModel(); }
        private object Activate_146_D2DTextStyle() { return new global::Telerik.UI.Drawing.D2DTextStyle(); }
        private object Activate_150_D2DShapeStyle() { return new global::Telerik.UI.Drawing.D2DShapeStyle(); }
        private object Activate_151_D2DSolidColorBrush() { return new global::Telerik.UI.Drawing.D2DSolidColorBrush(); }
        private object Activate_153_ChartAnnotationLabelDefinition() { return new global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition(); }
        private object Activate_155_PaletteEntryCollection() { return new global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection(); }
        private object Activate_156_List() { return new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Media.Brush>(); }
        private object Activate_157_AngledHexLayoutDefinition() { return new global::Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition(); }
        private object Activate_160_FlatLooseHexLayoutDefinition() { return new global::Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition(); }
        private object Activate_161_FlatTightHexLayoutDefinition() { return new global::Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition(); }
        private object Activate_162_HighlightStyle() { return new global::Telerik.UI.Xaml.Controls.Input.HighlightStyle(); }
        private object Activate_165_CalendarCellStyle() { return new global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle(); }
        private object Activate_166_CalendarTimeRulerItemStyleSelector() { return new global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector(); }
        private object Activate_168_RadRadialMenu() { return new global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu(); }
        private object Activate_169_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>(); }
        private object Activate_170_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>(); }
        private object Activate_171_RadialMenuItem() { return new global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem(); }
        private object Activate_179_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>(); }
        private object Activate_180_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>(); }
        private object Activate_183_RadialMenuTriggerBehavior() { return new global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior(); }
        private object Activate_186_BusyIndicatorAnimationAdapter() { return new global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter(); }
        private void VectorAdd_5_CartesianSeriesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_6_PresenterCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_7_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_19_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DataTemplate>)instance;
            var newItem = (global::Windows.UI.Xaml.DataTemplate)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DataTemplate>)instance;
            var newItem = (global::Windows.UI.Xaml.DataTemplate)item;
            collection.Add(newItem);
        }
        private void VectorAdd_24_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_25_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_ChartBehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior)item;
            collection.Add(newItem);
        }
        private void VectorAdd_35_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior)item;
            collection.Add(newItem);
        }
        private void VectorAdd_39_IndicatorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_PresenterCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_43_DataPointCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Charting.CategoricalDataPoint>)instance;
            var newItem = (global::Telerik.Charting.CategoricalDataPoint)item;
            collection.Add(newItem);
        }
        private void VectorAdd_44_ElementCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Charting.CategoricalDataPoint>)instance;
            var newItem = (global::Telerik.Charting.CategoricalDataPoint)item;
            collection.Add(newItem);
        }
        private void VectorAdd_45_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.Charting.CategoricalDataPoint>)instance;
            var newItem = (global::Telerik.Charting.CategoricalDataPoint)item;
            collection.Add(newItem);
        }
        private void VectorAdd_58_CartesianAnnotationCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_59_PresenterCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation)item;
            collection.Add(newItem);
        }
        private void VectorAdd_92_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_93_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_110_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TelerikChartTest.Models.ChartModel>)instance;
            var newItem = (global::TelerikChartTest.Models.ChartModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_111_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TelerikChartTest.Models.ChartModel>)instance;
            var newItem = (global::TelerikChartTest.Models.ChartModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_113_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TelerikChartTest.Models.ChartEvent>)instance;
            var newItem = (global::TelerikChartTest.Models.ChartEvent)item;
            collection.Add(newItem);
        }
        private void VectorAdd_114_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::TelerikChartTest.Models.ChartEvent>)instance;
            var newItem = (global::TelerikChartTest.Models.ChartEvent)item;
            collection.Add(newItem);
        }
        private void VectorAdd_131_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_138_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_156_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_169_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_170_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_177_CommandCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_178_AttachableObjectCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_179_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_180_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>)instance;
            var newItem = (global::Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Telerik.UI.Xaml.Controls.Chart.RadCartesianChart
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase"));
                userType.Activator = Activate_0_RadCartesianChart;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.RadCartesianChart.Series");
                userType.AddMemberName("Series");
                userType.AddMemberName("HorizontalAxis");
                userType.AddMemberName("VerticalAxis");
                userType.AddMemberName("Grid");
                userType.AddMemberName("Indicators");
                userType.AddMemberName("Annotations");
                xamlType = userType;
                break;

            case 1:   //  Telerik.UI.Xaml.Controls.Chart.RadChartBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PresenterBase"));
                userType.AddMemberName("ClipToBounds");
                userType.AddMemberName("Behaviors");
                userType.AddMemberName("SeriesProvider");
                userType.AddMemberName("EmptyContent");
                userType.AddMemberName("EmptyContentTemplate");
                userType.AddMemberName("PlotAreaStyle");
                userType.AddMemberName("Palette");
                userType.AddMemberName("PaletteName");
                userType.AddMemberName("SelectionPalette");
                userType.AddMemberName("SelectionPaletteName");
                userType.AddMemberName("ContainerVisualsFactory");
                userType.AddMemberName("Zoom");
                userType.AddMemberName("MaxZoom");
                userType.AddMemberName("MinZoom");
                userType.AddMemberName("PlotOrigin");
                userType.AddMemberName("PlotAreaClip");
                userType.AddMemberName("ScrollOffset");
                xamlType = userType;
                break;

            case 2:   //  Telerik.UI.Xaml.Controls.Chart.PresenterBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadControl"));
                xamlType = userType;
                break;

            case 3:   //  Telerik.UI.Xaml.Controls.RadControl
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("CurrentVisualState");
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Telerik.UI.Xaml.Controls.Chart.CartesianSeriesCollection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.CartesianSeries>"));
                userType.CollectionAdd = VectorAdd_5_CartesianSeriesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.CartesianSeries>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.CartesianSeries>"));
                userType.CollectionAdd = VectorAdd_6_PresenterCollection;
                xamlType = userType;
                break;

            case 7:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.CartesianSeries>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_Collection;
                userType.CollectionAdd = VectorAdd_7_Collection;
                xamlType = userType;
                break;

            case 8:   //  Object
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Telerik.UI.Xaml.Controls.Chart.CartesianSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries"));
                userType.AddMemberName("HorizontalAxis");
                userType.AddMemberName("VerticalAxis");
                xamlType = userType;
                break;

            case 10:   //  Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries"));
                userType.AddMemberName("DefaultVisualStyle");
                userType.AddMemberName("PointTemplate");
                userType.AddMemberName("PointTemplateSelector");
                userType.AddMemberName("PointTemplates");
                userType.AddMemberName("LegendTitle");
                userType.AddMemberName("IsVisibleInLegend");
                xamlType = userType;
                break;

            case 11:   //  Telerik.UI.Xaml.Controls.Chart.ChartSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter"));
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("AllowSelect");
                userType.AddMemberName("PaletteIndex");
                userType.AddMemberName("LabelDefinitions");
                userType.AddMemberName("IsSelectedBinding");
                userType.AddMemberName("ShowLabels");
                userType.AddMemberName("DisplayName");
                userType.AddMemberName("ClipToPlotArea");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ActualPaletteIndex");
                xamlType = userType;
                break;

            case 12:   //  Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PresenterBase"));
                userType.AddMemberName("ZIndex");
                userType.AddMemberName("Chart");
                xamlType = userType;
                break;

            case 13:   //  Telerik.UI.Xaml.Controls.Chart.CartesianAxis
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineAxis"));
                userType.AddMemberName("HorizontalLocation");
                userType.AddMemberName("VerticalLocation");
                xamlType = userType;
                break;

            case 14:   //  Telerik.UI.Xaml.Controls.Chart.LineAxis
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis"));
                userType.AddMemberName("IsInverse");
                xamlType = userType;
                break;

            case 15:   //  Telerik.UI.Xaml.Controls.Chart.Axis
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter"));
                userType.AddMemberName("Title");
                userType.AddMemberName("TitleTemplate");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("LabelFormatter");
                userType.AddMemberName("LabelCreator");
                userType.AddMemberName("LabelRotationAngle");
                userType.AddMemberName("LineStyle");
                userType.AddMemberName("LastLabelVisibility");
                userType.AddMemberName("LabelFormat");
                userType.AddMemberName("MajorTickOffset");
                userType.AddMemberName("LabelOffset");
                userType.AddMemberName("ShowLabels");
                userType.AddMemberName("LabelFitMode");
                userType.AddMemberName("LabelTemplateSelector");
                userType.AddMemberName("LabelStyle");
                userType.AddMemberName("MajorTickTemplate");
                userType.AddMemberName("MajorTickStyle");
                userType.AddMemberName("TickThickness");
                userType.AddMemberName("LabelInterval");
                xamlType = userType;
                break;

            case 16:   //  Windows.UI.Xaml.Style
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Windows.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.DataTemplate>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.DataTemplate>"));
                userType.CollectionAdd = VectorAdd_19_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.DataTemplate>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_20_Collection;
                userType.CollectionAdd = VectorAdd_20_Collection;
                xamlType = userType;
                break;

            case 21:   //  String
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Boolean
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Int32
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>"));
                userType.CollectionAdd = VectorAdd_24_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_25_Collection;
                userType.CollectionAdd = VectorAdd_25_Collection;
                xamlType = userType;
                break;

            case 26:   //  Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_26_ChartSeriesLabelDefinition;
                userType.AddMemberName("Binding");
                userType.AddMemberName("Format");
                userType.AddMemberName("Margin");
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("Template");
                userType.AddMemberName("TemplateSelector");
                userType.AddMemberName("DefaultVisualStyle");
                userType.AddMemberName("Strategy");
                xamlType = userType;
                break;

            case 27:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Telerik.UI.Xaml.Controls.Chart.DataPointBinding
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 29:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Windows.UI.Xaml.VerticalAlignment
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelStrategy
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  System.Collections.IEnumerable
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  Telerik.UI.Xaml.Controls.Chart.ChartBehaviorCollection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.ChartBehavior>"));
                userType.CollectionAdd = VectorAdd_34_ChartBehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.ChartBehavior>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_Collection;
                userType.CollectionAdd = VectorAdd_35_Collection;
                xamlType = userType;
                break;

            case 36:   //  Telerik.UI.Xaml.Controls.Chart.ChartBehavior
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("Chart");
                xamlType = userType;
                break;

            case 37:   //  Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartGrid"));
                userType.Activator = Activate_37_CartesianChartGrid;
                userType.AddMemberName("MajorLinesVisibility");
                userType.AddMemberName("MajorXLinesRenderMode");
                userType.AddMemberName("MajorYLinesRenderMode");
                userType.AddMemberName("StripLinesVisibility");
                userType.AddMemberName("XStripeBrushes");
                userType.AddMemberName("YStripeBrushes");
                userType.AddMemberName("MajorXLineStyle");
                userType.AddMemberName("MajorYLineStyle");
                xamlType = userType;
                break;

            case 38:   //  Telerik.UI.Xaml.Controls.Chart.ChartGrid
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter"));
                userType.AddMemberName("DefaultStripeBrush");
                xamlType = userType;
                break;

            case 39:   //  Telerik.UI.Xaml.Controls.Chart.IndicatorCollection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.IndicatorBase>"));
                userType.CollectionAdd = VectorAdd_39_IndicatorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.IndicatorBase>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.IndicatorBase>"));
                userType.CollectionAdd = VectorAdd_40_PresenterCollection;
                xamlType = userType;
                break;

            case 41:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.IndicatorBase>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_41_Collection;
                userType.CollectionAdd = VectorAdd_41_Collection;
                xamlType = userType;
                break;

            case 42:   //  Telerik.UI.Xaml.Controls.Chart.IndicatorBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries"));
                userType.AddMemberName("DataPoints");
                userType.AddMemberName("CategoryBinding");
                xamlType = userType;
                break;

            case 43:   //  Telerik.Charting.DataPointCollection`1<Telerik.Charting.CategoricalDataPoint>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Core.ElementCollection`1<Telerik.Charting.CategoricalDataPoint>"));
                userType.CollectionAdd = VectorAdd_43_DataPointCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  Telerik.Core.ElementCollection`1<Telerik.Charting.CategoricalDataPoint>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.Charting.CategoricalDataPoint>"));
                userType.CollectionAdd = VectorAdd_44_ElementCollection;
                xamlType = userType;
                break;

            case 45:   //  System.Collections.ObjectModel.Collection`1<Telerik.Charting.CategoricalDataPoint>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_45_Collection;
                userType.CollectionAdd = VectorAdd_45_Collection;
                xamlType = userType;
                break;

            case 46:   //  Telerik.Charting.CategoricalDataPoint
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Charting.CategoricalDataPointBase"));
                userType.Activator = Activate_46_CategoricalDataPoint;
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 47:   //  Telerik.Charting.CategoricalDataPointBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Charting.DataPoint"));
                userType.AddMemberName("Category");
                xamlType = userType;
                break;

            case 48:   //  Telerik.Charting.DataPoint
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Core.Node"));
                userType.AddMemberName("Label");
                userType.AddMemberName("DataItem");
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 49:   //  Telerik.Core.Node
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Core.PropertyBagObject"));
                userType.AddMemberName("Presenter");
                userType.AddMemberName("IsArrangeValid");
                userType.AddMemberName("NodeState");
                userType.AddMemberName("Index");
                userType.AddMemberName("CollectionIndex");
                userType.AddMemberName("IsTreeLoaded");
                userType.AddMemberName("LayoutSlot");
                userType.AddMemberName("Parent");
                xamlType = userType;
                break;

            case 50:   //  Telerik.Core.PropertyBagObject
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 51:   //  Double
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  Telerik.Core.IElementPresenter
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  Telerik.Core.NodeState
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Initial", global::Telerik.Core.NodeState.Initial);
                userType.AddEnumValue("Loading", global::Telerik.Core.NodeState.Loading);
                userType.AddEnumValue("Loaded", global::Telerik.Core.NodeState.Loaded);
                userType.AddEnumValue("Unloading", global::Telerik.Core.NodeState.Unloading);
                userType.AddEnumValue("Unloaded", global::Telerik.Core.NodeState.Unloaded);
                xamlType = userType;
                break;

            case 54:   //  System.Enum
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 55:   //  System.ValueType
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 56:   //  Telerik.Core.RadRect
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  Telerik.Core.Element
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.Core.Node"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 58:   //  Telerik.UI.Xaml.Controls.Chart.CartesianAnnotationCollection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>"));
                userType.CollectionAdd = VectorAdd_58_CartesianAnnotationCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 59:   //  Telerik.UI.Xaml.Controls.Chart.PresenterCollection`1<Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>"));
                userType.CollectionAdd = VectorAdd_59_PresenterCollection;
                xamlType = userType;
                break;

            case 60:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_60_Collection;
                userType.CollectionAdd = VectorAdd_60_Collection;
                xamlType = userType;
                break;

            case 61:   //  Telerik.UI.Xaml.Controls.Chart.CartesianChartAnnotation
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotation"));
                xamlType = userType;
                break;

            case 62:   //  Telerik.UI.Xaml.Controls.Chart.ChartAnnotation
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter"));
                userType.AddMemberName("ClipToPlotArea");
                xamlType = userType;
                break;

            case 63:   //  Telerik.UI.Xaml.Controls.Chart.ChartSeriesProvider
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  Telerik.UI.Xaml.Controls.Chart.ChartPalette
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_64_ChartPalette;
                userType.AddMemberName("Name");
                userType.AddMemberName("FillEntries");
                userType.AddMemberName("SpecialFillEntries");
                userType.AddMemberName("StrokeEntries");
                userType.AddMemberName("SpecialStrokeEntries");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 65:   //  Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName.None);
                userType.AddEnumValue("DefaultDark", global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName.DefaultDark);
                userType.AddEnumValue("DefaultLight", global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName.DefaultLight);
                userType.AddEnumValue("DefaultDarkSelected", global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName.DefaultDarkSelected);
                userType.AddEnumValue("DefaultLightSelected", global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName.DefaultLightSelected);
                xamlType = userType;
                break;

            case 66:   //  Telerik.UI.Xaml.Controls.Chart.ContainerVisualsFactory
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  Windows.Foundation.Size
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 68:   //  Windows.Foundation.Point
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 69:   //  Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartBehavior"));
                userType.Activator = Activate_69_ChartPanAndZoomBehavior;
                userType.AddMemberName("PanMode");
                userType.AddMemberName("ZoomMode");
                userType.AddMemberName("HandleDoubleTap");
                xamlType = userType;
                break;

            case 70:   //  Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode.None);
                userType.AddEnumValue("Horizontal", global::Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode.Horizontal);
                userType.AddEnumValue("Vertical", global::Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode.Vertical);
                userType.AddEnumValue("Both", global::Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode.Both);
                xamlType = userType;
                break;

            case 71:   //  Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartBehavior"));
                userType.Activator = Activate_71_ChartTrackBallBehavior;
                userType.AddMemberName("ShowIntersectionPoints");
                userType.AddMemberName("LineStyle");
                userType.AddMemberName("InfoStyle");
                userType.AddMemberName("ShowInfo");
                userType.AddMemberName("SnapMode");
                userType.AddMemberName("InfoMode");
                userType.AddMemberName("TrackInfoTemplate");
                userType.AddMemberName("IntersectionTemplate");
                xamlType = userType;
                break;

            case 72:   //  Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode.None);
                userType.AddEnumValue("ClosestPoint", global::Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode.ClosestPoint);
                userType.AddEnumValue("AllClosePoints", global::Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode.AllClosePoints);
                xamlType = userType;
                break;

            case 73:   //  Telerik.UI.Xaml.Controls.Chart.TrackInfoMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Multiple", global::Telerik.UI.Xaml.Controls.Chart.TrackInfoMode.Multiple);
                userType.AddEnumValue("Individual", global::Telerik.UI.Xaml.Controls.Chart.TrackInfoMode.Individual);
                xamlType = userType;
                break;

            case 74:   //  Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianAxis"));
                userType.Activator = Activate_74_DateTimeContinuousAxis;
                userType.AddMemberName("MajorStepUnit");
                userType.AddMemberName("MajorStep");
                userType.AddMemberName("PlotMode");
                userType.AddMemberName("PlotStretch");
                userType.AddMemberName("MaximumTicks");
                userType.AddMemberName("GapLength");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("ActualRange");
                xamlType = userType;
                break;

            case 75:   //  Telerik.Charting.TimeInterval
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Year", global::Telerik.Charting.TimeInterval.Year);
                userType.AddEnumValue("Quarter", global::Telerik.Charting.TimeInterval.Quarter);
                userType.AddEnumValue("Month", global::Telerik.Charting.TimeInterval.Month);
                userType.AddEnumValue("Week", global::Telerik.Charting.TimeInterval.Week);
                userType.AddEnumValue("Day", global::Telerik.Charting.TimeInterval.Day);
                userType.AddEnumValue("Hour", global::Telerik.Charting.TimeInterval.Hour);
                userType.AddEnumValue("Minute", global::Telerik.Charting.TimeInterval.Minute);
                userType.AddEnumValue("Second", global::Telerik.Charting.TimeInterval.Second);
                userType.AddEnumValue("Millisecond", global::Telerik.Charting.TimeInterval.Millisecond);
                xamlType = userType;
                break;

            case 76:   //  Telerik.Charting.AxisPlotMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("BetweenTicks", global::Telerik.Charting.AxisPlotMode.BetweenTicks);
                userType.AddEnumValue("OnTicks", global::Telerik.Charting.AxisPlotMode.OnTicks);
                userType.AddEnumValue("OnTicksPadded", global::Telerik.Charting.AxisPlotMode.OnTicksPadded);
                xamlType = userType;
                break;

            case 77:   //  Telerik.Charting.DateTimePlotStretchMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("TickSlot", global::Telerik.Charting.DateTimePlotStretchMode.TickSlot);
                userType.AddEnumValue("Uniform", global::Telerik.Charting.DateTimePlotStretchMode.Uniform);
                xamlType = userType;
                break;

            case 78:   //  System.DateTime
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 79:   //  Telerik.Core.ValueRange`1<System.DateTime>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 80:   //  Telerik.Charting.AxisHorizontalLocation
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Telerik.Charting.AxisHorizontalLocation.Left);
                userType.AddEnumValue("Right", global::Telerik.Charting.AxisHorizontalLocation.Right);
                xamlType = userType;
                break;

            case 81:   //  Telerik.Charting.AxisVerticalLocation
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Bottom", global::Telerik.Charting.AxisVerticalLocation.Bottom);
                userType.AddEnumValue("Top", global::Telerik.Charting.AxisVerticalLocation.Top);
                xamlType = userType;
                break;

            case 82:   //  Telerik.Charting.IContentFormatter
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 83:   //  Telerik.Charting.ILabelCreator
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  Telerik.Charting.AxisLastLabelVisibility
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Visible", global::Telerik.Charting.AxisLastLabelVisibility.Visible);
                userType.AddEnumValue("Hidden", global::Telerik.Charting.AxisLastLabelVisibility.Hidden);
                userType.AddEnumValue("Clip", global::Telerik.Charting.AxisLastLabelVisibility.Clip);
                xamlType = userType;
                break;

            case 85:   //  Telerik.Charting.AxisLabelFitMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.Charting.AxisLabelFitMode.None);
                userType.AddEnumValue("MultiLine", global::Telerik.Charting.AxisLabelFitMode.MultiLine);
                userType.AddEnumValue("Rotate", global::Telerik.Charting.AxisLabelFitMode.Rotate);
                xamlType = userType;
                break;

            case 86:   //  Telerik.UI.Xaml.Controls.Chart.LinearAxis
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.NumericalAxis"));
                userType.Activator = Activate_86_LinearAxis;
                userType.AddMemberName("MajorStep");
                xamlType = userType;
                break;

            case 87:   //  Telerik.UI.Xaml.Controls.Chart.NumericalAxis
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianAxis"));
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("RangeExtendDirection");
                userType.AddMemberName("DesiredTickCount");
                userType.AddMemberName("ActualRange");
                xamlType = userType;
                break;

            case 88:   //  Telerik.Charting.NumericalAxisRangeExtendDirection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.Charting.NumericalAxisRangeExtendDirection.None);
                userType.AddEnumValue("Positive", global::Telerik.Charting.NumericalAxisRangeExtendDirection.Positive);
                userType.AddEnumValue("Negative", global::Telerik.Charting.NumericalAxisRangeExtendDirection.Negative);
                userType.AddEnumValue("Both", global::Telerik.Charting.NumericalAxisRangeExtendDirection.Both);
                xamlType = userType;
                break;

            case 89:   //  Telerik.Core.ValueRange`1<Double>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 90:   //  Telerik.UI.Xaml.Controls.Chart.GridLineVisibility
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Chart.GridLineVisibility.None);
                userType.AddEnumValue("X", global::Telerik.UI.Xaml.Controls.Chart.GridLineVisibility.X);
                userType.AddEnumValue("Y", global::Telerik.UI.Xaml.Controls.Chart.GridLineVisibility.Y);
                userType.AddEnumValue("XY", global::Telerik.UI.Xaml.Controls.Chart.GridLineVisibility.XY);
                xamlType = userType;
                break;

            case 91:   //  Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("First", global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode.First);
                userType.AddEnumValue("Inner", global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode.Inner);
                userType.AddEnumValue("FirstAndInner", global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode.FirstAndInner);
                userType.AddEnumValue("Last", global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode.Last);
                userType.AddEnumValue("FirstAndLast", global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode.FirstAndLast);
                userType.AddEnumValue("InnerAndLast", global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode.InnerAndLast);
                userType.AddEnumValue("All", global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode.All);
                xamlType = userType;
                break;

            case 92:   //  System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.Brush>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.Brush>"));
                userType.CollectionAdd = VectorAdd_92_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 93:   //  System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.Brush>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_93_Collection;
                userType.CollectionAdd = VectorAdd_93_Collection;
                xamlType = userType;
                break;

            case 94:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 95:   //  Telerik.UI.Xaml.Controls.Chart.SplineSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineSeries"));
                userType.Activator = Activate_95_SplineSeries;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.DataPoints");
                xamlType = userType;
                break;

            case 96:   //  Telerik.UI.Xaml.Controls.Chart.LineSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries"));
                userType.Activator = Activate_96_LineSeries;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.DataPoints");
                xamlType = userType;
                break;

            case 97:   //  Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeries"));
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.DataPoints");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("StrokeDashArray");
                userType.AddMemberName("StrokeLineJoin");
                xamlType = userType;
                break;

            case 98:   //  Telerik.UI.Xaml.Controls.Chart.CategoricalSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase"));
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.DataPoints");
                userType.AddMemberName("CombineMode");
                userType.AddMemberName("StackGroupKey");
                xamlType = userType;
                break;

            case 99:   //  Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianSeries"));
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.DataPoints");
                userType.AddMemberName("DataPoints");
                userType.AddMemberName("ValueBinding");
                userType.AddMemberName("CategoryBinding");
                xamlType = userType;
                break;

            case 100:   //  Windows.UI.Xaml.Media.DoubleCollection
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 101:   //  Windows.UI.Xaml.Media.PenLineJoin
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 102:   //  Telerik.Charting.ChartSeriesCombineMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.Charting.ChartSeriesCombineMode.None);
                userType.AddEnumValue("Cluster", global::Telerik.Charting.ChartSeriesCombineMode.Cluster);
                userType.AddEnumValue("Stack", global::Telerik.Charting.ChartSeriesCombineMode.Stack);
                userType.AddEnumValue("Stack100", global::Telerik.Charting.ChartSeriesCombineMode.Stack100);
                xamlType = userType;
                break;

            case 103:   //  Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DataPointBinding"));
                userType.Activator = Activate_103_PropertyNameDataPointBinding;
                userType.AddMemberName("PropertyName");
                xamlType = userType;
                break;

            case 104:   //  Telerik.UI.Xaml.Controls.Chart.ExponentialMovingAverageIndicator
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase"));
                userType.Activator = Activate_104_ExponentialMovingAverageIndicator;
                xamlType = userType;
                break;

            case 105:   //  Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase"));
                userType.AddMemberName("Period");
                xamlType = userType;
                break;

            case 106:   //  Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase"));
                userType.AddMemberName("ValueBinding");
                xamlType = userType;
                break;

            case 107:   //  Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.IndicatorBase"));
                userType.AddMemberName("Stroke");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("StrokeDashArray");
                userType.AddMemberName("StrokeLineJoin");
                xamlType = userType;
                break;

            case 108:   //  TelerikChartTest.Controls.ChartUC
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_108_ChartUC;
                userType.AddMemberName("ChartItems");
                userType.AddMemberName("ChartEventItems");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 109:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 110:   //  System.Collections.ObjectModel.ObservableCollection`1<TelerikChartTest.Models.ChartModel>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TelerikChartTest.Models.ChartModel>"));
                userType.CollectionAdd = VectorAdd_110_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 111:   //  System.Collections.ObjectModel.Collection`1<TelerikChartTest.Models.ChartModel>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_111_Collection;
                userType.CollectionAdd = VectorAdd_111_Collection;
                xamlType = userType;
                break;

            case 112:   //  TelerikChartTest.Models.ChartModel
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_112_ChartModel;
                userType.AddMemberName("Value");
                userType.AddMemberName("ProcesTime");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 113:   //  System.Collections.ObjectModel.ObservableCollection`1<TelerikChartTest.Models.ChartEvent>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<TelerikChartTest.Models.ChartEvent>"));
                userType.CollectionAdd = VectorAdd_113_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 114:   //  System.Collections.ObjectModel.Collection`1<TelerikChartTest.Models.ChartEvent>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_114_Collection;
                userType.CollectionAdd = VectorAdd_114_Collection;
                xamlType = userType;
                break;

            case 115:   //  TelerikChartTest.Models.ChartEvent
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TelerikChartTest.Helpers.Observable"));
                userType.Activator = Activate_115_ChartEvent;
                userType.AddMemberName("EventDescription");
                userType.AddMemberName("EventStart");
                userType.AddMemberName("EventEnd");
                userType.AddMemberName("Value");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 116:   //  TelerikChartTest.Helpers.Observable
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_116_Observable;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 117:   //  Telerik.UI.Xaml.Controls.Chart.CategoricalAxis
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianAxis"));
                userType.Activator = Activate_117_CategoricalAxis;
                userType.AddMemberName("AutoGroup");
                userType.AddMemberName("MajorTickInterval");
                userType.AddMemberName("PlotMode");
                userType.AddMemberName("GapLength");
                xamlType = userType;
                break;

            case 118:   //  Telerik.UI.Xaml.Controls.Chart.BarSeries
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeries"));
                userType.Activator = Activate_118_BarSeries;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.DataPoints");
                userType.AddMemberName("PaletteMode");
                userType.AddMemberName("LegendTitleBinding");
                xamlType = userType;
                break;

            case 119:   //  Telerik.UI.Xaml.Controls.Chart.SeriesPaletteMode
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Series", global::Telerik.UI.Xaml.Controls.Chart.SeriesPaletteMode.Series);
                userType.AddEnumValue("DataPoint", global::Telerik.UI.Xaml.Controls.Chart.SeriesPaletteMode.DataPoint);
                xamlType = userType;
                break;

            case 120:   //  TelerikChartTest.Views.ChartPage
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_120_ChartPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 121:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 122:   //  TelerikChartTest.ViewModels.ChartViewModel
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TelerikChartTest.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 123:   //  TelerikChartTest.Views.MainPage
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_123_MainPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 124:   //  TelerikChartTest.ViewModels.MainViewModel
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TelerikChartTest.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 125:   //  TelerikChartTest.Helpers.EnumToBooleanConverter
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_125_EnumToBooleanConverter;
                userType.AddMemberName("EnumType");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 126:   //  System.Type
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MemberInfo"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 127:   //  System.Reflection.MemberInfo
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 128:   //  TelerikChartTest.Views.SettingsPage
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_128_SettingsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 129:   //  TelerikChartTest.ViewModels.SettingsViewModel
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TelerikChartTest.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 130:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 131:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_131_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 132:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 133:   //  TelerikChartTest.Helpers.NavHelper
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_133_NavHelper;
                userType.AddMemberName("NavigateTo");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 134:   //  Windows.UI.Xaml.Controls.NavigationViewItem
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 135:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger"));
                userType.Activator = Activate_135_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 136:   //  Microsoft.Xaml.Interactivity.Trigger
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("Actions");
                xamlType = userType;
                break;

            case 137:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 138:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_138_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 139:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_139_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 140:   //  System.Windows.Input.ICommand
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 141:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 142:   //  TelerikChartTest.Views.ShellPage
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_142_ShellPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 143:   //  TelerikChartTest.ViewModels.ShellViewModel
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("TelerikChartTest.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 144:   //  Telerik.UI.Drawing.D2DResource
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 145:   //  Telerik.UI.Drawing.D2DBrush
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Drawing.D2DResource"));
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 146:   //  Telerik.UI.Drawing.D2DTextStyle
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_146_D2DTextStyle;
                userType.AddMemberName("Foreground");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontLocale");
                userType.AddMemberName("FontName");
                userType.AddMemberName("TextAlignment");
                userType.AddMemberName("FontStyle");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 147:   //  Telerik.UI.Drawing.FontWeightName
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Black", global::Telerik.UI.Drawing.FontWeightName.Black);
                userType.AddEnumValue("Bold", global::Telerik.UI.Drawing.FontWeightName.Bold);
                userType.AddEnumValue("ExtraBlack", global::Telerik.UI.Drawing.FontWeightName.ExtraBlack);
                userType.AddEnumValue("ExtraBold", global::Telerik.UI.Drawing.FontWeightName.ExtraBold);
                userType.AddEnumValue("ExtraLight", global::Telerik.UI.Drawing.FontWeightName.ExtraLight);
                userType.AddEnumValue("Light", global::Telerik.UI.Drawing.FontWeightName.Light);
                userType.AddEnumValue("Medium", global::Telerik.UI.Drawing.FontWeightName.Medium);
                userType.AddEnumValue("Normal", global::Telerik.UI.Drawing.FontWeightName.Normal);
                userType.AddEnumValue("SemiBold", global::Telerik.UI.Drawing.FontWeightName.SemiBold);
                userType.AddEnumValue("SemiLight", global::Telerik.UI.Drawing.FontWeightName.SemiLight);
                userType.AddEnumValue("Thin", global::Telerik.UI.Drawing.FontWeightName.Thin);
                xamlType = userType;
                break;

            case 148:   //  Windows.UI.Xaml.TextAlignment
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 149:   //  Windows.UI.Text.FontStyle
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 150:   //  Telerik.UI.Drawing.D2DShapeStyle
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_150_D2DShapeStyle;
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("Fill");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 151:   //  Telerik.UI.Drawing.D2DSolidColorBrush
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Drawing.D2DBrush"));
                userType.Activator = Activate_151_D2DSolidColorBrush;
                userType.AddMemberName("Color");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 152:   //  Windows.UI.Color
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 153:   //  Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_153_ChartAnnotationLabelDefinition;
                userType.AddMemberName("Format");
                userType.AddMemberName("Template");
                userType.AddMemberName("DefaultVisualStyle");
                userType.AddMemberName("Location");
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("VerticalOffset");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 154:   //  Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Left);
                userType.AddEnumValue("Top", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Top);
                userType.AddEnumValue("Right", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Right);
                userType.AddEnumValue("Bottom", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Bottom);
                userType.AddEnumValue("Inside", global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation.Inside);
                xamlType = userType;
                break;

            case 155:   //  Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_155_PaletteEntryCollection;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection.Brushes");
                userType.AddMemberName("Brushes");
                xamlType = userType;
                break;

            case 156:   //  System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_156_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 157:   //  Telerik.UI.Xaml.Controls.Data.HexView.AngledHexLayoutDefinition
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase"));
                userType.Activator = Activate_157_AngledHexLayoutDefinition;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 158:   //  Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("Orientation");
                userType.AddMemberName("ItemLength");
                userType.AddMemberName("ItemsSpacing");
                userType.AddMemberName("ViewPortExtension");
                xamlType = userType;
                break;

            case 159:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 160:   //  Telerik.UI.Xaml.Controls.Data.HexView.FlatLooseHexLayoutDefinition
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase"));
                userType.Activator = Activate_160_FlatLooseHexLayoutDefinition;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 161:   //  Telerik.UI.Xaml.Controls.Data.HexView.FlatTightHexLayoutDefinition
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase"));
                userType.Activator = Activate_161_FlatTightHexLayoutDefinition;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 162:   //  Telerik.UI.Xaml.Controls.Input.HighlightStyle
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_162_HighlightStyle;
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("FontSize");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 163:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 164:   //  Telerik.UI.Xaml.Controls.Input.FontWeightName
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Black", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Black);
                userType.AddEnumValue("Bold", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Bold);
                userType.AddEnumValue("ExtraBlack", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.ExtraBlack);
                userType.AddEnumValue("ExtraBold", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.ExtraBold);
                userType.AddEnumValue("ExtraLight", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.ExtraLight);
                userType.AddEnumValue("Light", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Light);
                userType.AddEnumValue("Medium", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Medium);
                userType.AddEnumValue("Normal", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Normal);
                userType.AddEnumValue("SemiBold", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.SemiBold);
                userType.AddEnumValue("SemiLight", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.SemiLight);
                userType.AddEnumValue("Thin", global::Telerik.UI.Xaml.Controls.Input.FontWeightName.Thin);
                xamlType = userType;
                break;

            case 165:   //  Telerik.UI.Xaml.Controls.Input.CalendarCellStyle
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_165_CalendarCellStyle;
                userType.AddMemberName("ContentStyle");
                userType.AddMemberName("DecorationStyle");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 166:   //  Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.StyleSelector"));
                userType.Activator = Activate_166_CalendarTimeRulerItemStyleSelector;
                userType.AddMemberName("VerticalLineStyle");
                userType.AddMemberName("HorizontalLineStyle");
                userType.AddMemberName("TimeLabelStyle");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 167:   //  Windows.UI.Xaml.Controls.StyleSelector
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 168:   //  Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadControl"));
                userType.Activator = Activate_168_RadRadialMenu;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("ShowToolTip");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("StartAngle");
                userType.AddMemberName("InnerNavigationRadiusFactor");
                userType.AddMemberName("InnerRadiusFactor");
                userType.AddMemberName("OuterRadiusFactor");
                userType.AddMemberName("ContentMenuBackgroundStyle");
                userType.AddMemberName("NavigationMenuBackgroundStyle");
                userType.AddMemberName("CommandService");
                userType.AddMemberName("Commands");
                userType.AddMemberName("TargetElement");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 169:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>"));
                userType.CollectionAdd = VectorAdd_169_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 170:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_170_Collection;
                userType.CollectionAdd = VectorAdd_170_Collection;
                xamlType = userType;
                break;

            case 171:   //  Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.Activator = Activate_171_RadialMenuItem;
                userType.SetContentPropertyName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ChildItems");
                userType.AddMemberName("ChildItems");
                userType.AddMemberName("ToolTipContent");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("IsEnabled");
                userType.AddMemberName("Command");
                userType.AddMemberName("ParentItem");
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("GroupName");
                userType.AddMemberName("Selectable");
                userType.AddMemberName("Deselectable");
                userType.AddMemberName("Header");
                userType.AddMemberName("IconContent");
                userType.AddMemberName("ContentSectorBackground");
                xamlType = userType;
                break;

            case 172:   //  Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 173:   //  Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 174:   //  Telerik.UI.Xaml.Controls.Primitives.CommandServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                xamlType = userType;
                break;

            case 175:   //  Telerik.UI.Xaml.Controls.Primitives.ServiceBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                xamlType = userType;
                break;

            case 176:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.AddMemberName("Owner");
                xamlType = userType;
                break;

            case 177:   //  Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>"));
                userType.CollectionAdd = VectorAdd_177_CommandCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 178:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu, Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>"));
                userType.CollectionAdd = VectorAdd_178_AttachableObjectCollection;
                xamlType = userType;
                break;

            case 179:   //  System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>"));
                userType.Activator = Activate_179_ObservableCollection;
                userType.CollectionAdd = VectorAdd_179_ObservableCollection;
                xamlType = userType;
                break;

            case 180:   //  System.Collections.ObjectModel.Collection`1<Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_180_Collection;
                userType.CollectionAdd = VectorAdd_180_Collection;
                xamlType = userType;
                break;

            case 181:   //  Telerik.UI.Xaml.Controls.Primitives.ControlCommandBase`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>"));
                xamlType = userType;
                break;

            case 182:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 183:   //  Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>"));
                userType.Activator = Activate_183_RadialMenuTriggerBehavior;
                userType.AddMemberName("AttachTriggers");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 184:   //  Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject"));
                userType.AddMemberName("Owner");
                xamlType = userType;
                break;

            case 185:   //  Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.None);
                userType.AddEnumValue("PointerPressed", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.PointerPressed);
                userType.AddEnumValue("PointerOver", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.PointerOver);
                userType.AddEnumValue("Focused", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.Focused);
                userType.AddEnumValue("PressedOrFocused", global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers.PressedOrFocused);
                xamlType = userType;
                break;

            case 186:   //  Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter
                userType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_186_BusyIndicatorAnimationAdapter;
                userType.AddMemberName("Animation");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 187:   //  Windows.UI.Xaml.Media.Animation.Storyboard
                xamlType = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Telerik.UI.Xaml.Controls.Chart.Chart_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Data.DataControls_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.DataVisualization.DataVisualization_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Grid.Grid_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Input.Input_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Map.Map_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Telerik.UI.Xaml.Controls.Primitives.Primitives_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_RadCartesianChart_Series(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            return that.Series;
        }
        private object get_1_CartesianSeries_HorizontalAxis(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries)instance;
            return that.HorizontalAxis;
        }
        private void set_1_CartesianSeries_HorizontalAxis(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries)instance;
            that.HorizontalAxis = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)Value;
        }
        private object get_2_CartesianSeries_VerticalAxis(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries)instance;
            return that.VerticalAxis;
        }
        private void set_2_CartesianSeries_VerticalAxis(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianSeries)instance;
            that.VerticalAxis = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)Value;
        }
        private object get_3_PointTemplateSeries_DefaultVisualStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            return that.DefaultVisualStyle;
        }
        private void set_3_PointTemplateSeries_DefaultVisualStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            that.DefaultVisualStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_4_PointTemplateSeries_PointTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            return that.PointTemplate;
        }
        private void set_4_PointTemplateSeries_PointTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            that.PointTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_5_PointTemplateSeries_PointTemplateSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            return that.PointTemplateSelector;
        }
        private void set_5_PointTemplateSeries_PointTemplateSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            that.PointTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_6_PointTemplateSeries_PointTemplates(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            return that.PointTemplates;
        }
        private object get_7_PointTemplateSeries_LegendTitle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            return that.LegendTitle;
        }
        private void set_7_PointTemplateSeries_LegendTitle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            that.LegendTitle = (global::System.String)Value;
        }
        private object get_8_PointTemplateSeries_IsVisibleInLegend(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            return that.IsVisibleInLegend;
        }
        private void set_8_PointTemplateSeries_IsVisibleInLegend(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries)instance;
            that.IsVisibleInLegend = (global::System.Boolean)Value;
        }
        private object get_9_ChartSeries_IsSelected(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.IsSelected;
        }
        private void set_9_ChartSeries_IsSelected(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_10_ChartSeries_AllowSelect(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.AllowSelect;
        }
        private void set_10_ChartSeries_AllowSelect(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.AllowSelect = (global::System.Boolean)Value;
        }
        private object get_11_ChartSeries_PaletteIndex(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.PaletteIndex;
        }
        private void set_11_ChartSeries_PaletteIndex(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.PaletteIndex = (global::System.Int32)Value;
        }
        private object get_12_ChartSeries_LabelDefinitions(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.LabelDefinitions;
        }
        private object get_13_ChartSeriesLabelDefinition_Binding(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.Binding;
        }
        private void set_13_ChartSeriesLabelDefinition_Binding(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.Binding = (global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding)Value;
        }
        private object get_14_ChartSeriesLabelDefinition_Format(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.Format;
        }
        private void set_14_ChartSeriesLabelDefinition_Format(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_15_ChartSeriesLabelDefinition_Margin(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.Margin;
        }
        private void set_15_ChartSeriesLabelDefinition_Margin(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.Margin = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_16_ChartSeriesLabelDefinition_HorizontalAlignment(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.HorizontalAlignment;
        }
        private void set_16_ChartSeriesLabelDefinition_HorizontalAlignment(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.HorizontalAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_17_ChartSeriesLabelDefinition_VerticalAlignment(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.VerticalAlignment;
        }
        private void set_17_ChartSeriesLabelDefinition_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.VerticalAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_18_ChartSeriesLabelDefinition_Template(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.Template;
        }
        private void set_18_ChartSeriesLabelDefinition_Template(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.Template = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_19_ChartSeriesLabelDefinition_TemplateSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.TemplateSelector;
        }
        private void set_19_ChartSeriesLabelDefinition_TemplateSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.TemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_20_ChartSeriesLabelDefinition_DefaultVisualStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.DefaultVisualStyle;
        }
        private void set_20_ChartSeriesLabelDefinition_DefaultVisualStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.DefaultVisualStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_21_ChartSeriesLabelDefinition_Strategy(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            return that.Strategy;
        }
        private void set_21_ChartSeriesLabelDefinition_Strategy(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition)instance;
            that.Strategy = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelStrategy)Value;
        }
        private object get_22_ChartSeries_IsSelectedBinding(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.IsSelectedBinding;
        }
        private void set_22_ChartSeries_IsSelectedBinding(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.IsSelectedBinding = (global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding)Value;
        }
        private object get_23_ChartSeries_ShowLabels(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.ShowLabels;
        }
        private void set_23_ChartSeries_ShowLabels(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.ShowLabels = (global::System.Boolean)Value;
        }
        private object get_24_ChartSeries_DisplayName(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.DisplayName;
        }
        private void set_24_ChartSeries_DisplayName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.DisplayName = (global::System.String)Value;
        }
        private object get_25_ChartSeries_ClipToPlotArea(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.ClipToPlotArea;
        }
        private void set_25_ChartSeries_ClipToPlotArea(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.ClipToPlotArea = (global::System.Boolean)Value;
        }
        private object get_26_ChartSeries_ItemsSource(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.ItemsSource;
        }
        private void set_26_ChartSeries_ItemsSource(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_27_ChartSeries_ActualPaletteIndex(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeries)instance;
            return that.ActualPaletteIndex;
        }
        private object get_28_ChartElementPresenter_ZIndex(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter)instance;
            return that.ZIndex;
        }
        private void set_28_ChartElementPresenter_ZIndex(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter)instance;
            that.ZIndex = (global::System.Int32)Value;
        }
        private object get_29_ChartElementPresenter_Chart(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter)instance;
            return that.Chart;
        }
        private object get_30_RadControl_CurrentVisualState(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.RadControl)instance;
            return that.CurrentVisualState;
        }
        private object get_31_RadChartBase_ClipToBounds(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.ClipToBounds;
        }
        private void set_31_RadChartBase_ClipToBounds(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.ClipToBounds = (global::System.Boolean)Value;
        }
        private object get_32_RadChartBase_Behaviors(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.Behaviors;
        }
        private object get_33_ChartBehavior_Chart(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartBehavior)instance;
            return that.Chart;
        }
        private object get_34_RadCartesianChart_HorizontalAxis(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            return that.HorizontalAxis;
        }
        private void set_34_RadCartesianChart_HorizontalAxis(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            that.HorizontalAxis = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)Value;
        }
        private object get_35_RadCartesianChart_VerticalAxis(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            return that.VerticalAxis;
        }
        private void set_35_RadCartesianChart_VerticalAxis(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            that.VerticalAxis = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)Value;
        }
        private object get_36_RadCartesianChart_Grid(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            return that.Grid;
        }
        private void set_36_RadCartesianChart_Grid(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            that.Grid = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)Value;
        }
        private object get_37_RadCartesianChart_Indicators(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            return that.Indicators;
        }
        private object get_38_IndicatorBase_DataPoints(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase)instance;
            return that.DataPoints;
        }
        private object get_39_CategoricalDataPoint_Value(object instance)
        {
            var that = (global::Telerik.Charting.CategoricalDataPoint)instance;
            return that.Value;
        }
        private void set_39_CategoricalDataPoint_Value(object instance, object Value)
        {
            var that = (global::Telerik.Charting.CategoricalDataPoint)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_40_CategoricalDataPointBase_Category(object instance)
        {
            var that = (global::Telerik.Charting.CategoricalDataPointBase)instance;
            return that.Category;
        }
        private void set_40_CategoricalDataPointBase_Category(object instance, object Value)
        {
            var that = (global::Telerik.Charting.CategoricalDataPointBase)instance;
            that.Category = (global::System.Object)Value;
        }
        private object get_41_DataPoint_Label(object instance)
        {
            var that = (global::Telerik.Charting.DataPoint)instance;
            return that.Label;
        }
        private void set_41_DataPoint_Label(object instance, object Value)
        {
            var that = (global::Telerik.Charting.DataPoint)instance;
            that.Label = (global::System.Object)Value;
        }
        private object get_42_DataPoint_DataItem(object instance)
        {
            var that = (global::Telerik.Charting.DataPoint)instance;
            return that.DataItem;
        }
        private object get_43_DataPoint_IsSelected(object instance)
        {
            var that = (global::Telerik.Charting.DataPoint)instance;
            return that.IsSelected;
        }
        private void set_43_DataPoint_IsSelected(object instance, object Value)
        {
            var that = (global::Telerik.Charting.DataPoint)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_44_Node_Presenter(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.Presenter;
        }
        private object get_45_Node_IsArrangeValid(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.IsArrangeValid;
        }
        private object get_46_Node_NodeState(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.NodeState;
        }
        private object get_47_Node_Index(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.Index;
        }
        private object get_48_Node_CollectionIndex(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.CollectionIndex;
        }
        private object get_49_Node_IsTreeLoaded(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.IsTreeLoaded;
        }
        private object get_50_Node_LayoutSlot(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.LayoutSlot;
        }
        private object get_51_Node_Parent(object instance)
        {
            var that = (global::Telerik.Core.Node)instance;
            return that.Parent;
        }
        private object get_52_IndicatorBase_CategoryBinding(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase)instance;
            return that.CategoryBinding;
        }
        private void set_52_IndicatorBase_CategoryBinding(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.IndicatorBase)instance;
            that.CategoryBinding = (global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding)Value;
        }
        private object get_53_RadCartesianChart_Annotations(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)instance;
            return that.Annotations;
        }
        private object get_54_ChartAnnotation_ClipToPlotArea(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotation)instance;
            return that.ClipToPlotArea;
        }
        private void set_54_ChartAnnotation_ClipToPlotArea(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotation)instance;
            that.ClipToPlotArea = (global::System.Boolean)Value;
        }
        private object get_55_RadChartBase_SeriesProvider(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.SeriesProvider;
        }
        private void set_55_RadChartBase_SeriesProvider(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.SeriesProvider = (global::Telerik.UI.Xaml.Controls.Chart.ChartSeriesProvider)Value;
        }
        private object get_56_RadChartBase_EmptyContent(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.EmptyContent;
        }
        private void set_56_RadChartBase_EmptyContent(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.EmptyContent = (global::System.Object)Value;
        }
        private object get_57_RadChartBase_EmptyContentTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.EmptyContentTemplate;
        }
        private void set_57_RadChartBase_EmptyContentTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.EmptyContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_58_RadChartBase_PlotAreaStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.PlotAreaStyle;
        }
        private void set_58_RadChartBase_PlotAreaStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.PlotAreaStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_59_RadChartBase_Palette(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.Palette;
        }
        private void set_59_RadChartBase_Palette(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.Palette = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)Value;
        }
        private object get_60_RadChartBase_PaletteName(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.PaletteName;
        }
        private void set_60_RadChartBase_PaletteName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.PaletteName = (global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName)Value;
        }
        private object get_61_RadChartBase_SelectionPalette(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.SelectionPalette;
        }
        private void set_61_RadChartBase_SelectionPalette(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.SelectionPalette = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)Value;
        }
        private object get_62_RadChartBase_SelectionPaletteName(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.SelectionPaletteName;
        }
        private void set_62_RadChartBase_SelectionPaletteName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.SelectionPaletteName = (global::Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName)Value;
        }
        private object get_63_RadChartBase_ContainerVisualsFactory(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.ContainerVisualsFactory;
        }
        private void set_63_RadChartBase_ContainerVisualsFactory(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.ContainerVisualsFactory = (global::Telerik.UI.Xaml.Controls.Chart.ContainerVisualsFactory)Value;
        }
        private object get_64_RadChartBase_Zoom(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.Zoom;
        }
        private void set_64_RadChartBase_Zoom(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.Zoom = (global::Windows.Foundation.Size)Value;
        }
        private object get_65_RadChartBase_MaxZoom(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.MaxZoom;
        }
        private void set_65_RadChartBase_MaxZoom(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.MaxZoom = (global::Windows.Foundation.Size)Value;
        }
        private object get_66_RadChartBase_MinZoom(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.MinZoom;
        }
        private void set_66_RadChartBase_MinZoom(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.MinZoom = (global::Windows.Foundation.Size)Value;
        }
        private object get_67_RadChartBase_PlotOrigin(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.PlotOrigin;
        }
        private object get_68_RadChartBase_PlotAreaClip(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.PlotAreaClip;
        }
        private object get_69_RadChartBase_ScrollOffset(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            return that.ScrollOffset;
        }
        private void set_69_RadChartBase_ScrollOffset(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.RadChartBase)instance;
            that.ScrollOffset = (global::Windows.Foundation.Point)Value;
        }
        private object get_70_ChartPanAndZoomBehavior_PanMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior)instance;
            return that.PanMode;
        }
        private void set_70_ChartPanAndZoomBehavior_PanMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior)instance;
            that.PanMode = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode)Value;
        }
        private object get_71_ChartPanAndZoomBehavior_ZoomMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior)instance;
            return that.ZoomMode;
        }
        private void set_71_ChartPanAndZoomBehavior_ZoomMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior)instance;
            that.ZoomMode = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode)Value;
        }
        private object get_72_ChartPanAndZoomBehavior_HandleDoubleTap(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior)instance;
            return that.HandleDoubleTap;
        }
        private void set_72_ChartPanAndZoomBehavior_HandleDoubleTap(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior)instance;
            that.HandleDoubleTap = (global::System.Boolean)Value;
        }
        private object get_73_ChartTrackBallBehavior_ShowIntersectionPoints(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            return that.ShowIntersectionPoints;
        }
        private void set_73_ChartTrackBallBehavior_ShowIntersectionPoints(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            that.ShowIntersectionPoints = (global::System.Boolean)Value;
        }
        private object get_74_ChartTrackBallBehavior_LineStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            return that.LineStyle;
        }
        private void set_74_ChartTrackBallBehavior_LineStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            that.LineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_75_ChartTrackBallBehavior_InfoStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            return that.InfoStyle;
        }
        private void set_75_ChartTrackBallBehavior_InfoStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            that.InfoStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_76_ChartTrackBallBehavior_ShowInfo(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            return that.ShowInfo;
        }
        private void set_76_ChartTrackBallBehavior_ShowInfo(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            that.ShowInfo = (global::System.Boolean)Value;
        }
        private object get_77_ChartTrackBallBehavior_SnapMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            return that.SnapMode;
        }
        private void set_77_ChartTrackBallBehavior_SnapMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            that.SnapMode = (global::Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode)Value;
        }
        private object get_78_ChartTrackBallBehavior_InfoMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            return that.InfoMode;
        }
        private void set_78_ChartTrackBallBehavior_InfoMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)instance;
            that.InfoMode = (global::Telerik.UI.Xaml.Controls.Chart.TrackInfoMode)Value;
        }
        private object get_79_ChartTrackBallBehavior_TrackInfoTemplate(object instance)
        {
            return global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.GetTrackInfoTemplate((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_79_ChartTrackBallBehavior_TrackInfoTemplate(object instance, object Value)
        {
            global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.SetTrackInfoTemplate((global::Windows.UI.Xaml.DependencyObject)instance, (global::Windows.UI.Xaml.DataTemplate)Value);
        }
        private object get_80_ChartTrackBallBehavior_IntersectionTemplate(object instance)
        {
            return global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.GetIntersectionTemplate((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_80_ChartTrackBallBehavior_IntersectionTemplate(object instance, object Value)
        {
            global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.SetIntersectionTemplate((global::Windows.UI.Xaml.DependencyObject)instance, (global::Windows.UI.Xaml.DataTemplate)Value);
        }
        private object get_81_DateTimeContinuousAxis_MajorStepUnit(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.MajorStepUnit;
        }
        private void set_81_DateTimeContinuousAxis_MajorStepUnit(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.MajorStepUnit = (global::Telerik.Charting.TimeInterval)Value;
        }
        private object get_82_DateTimeContinuousAxis_MajorStep(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.MajorStep;
        }
        private void set_82_DateTimeContinuousAxis_MajorStep(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.MajorStep = (global::System.Double)Value;
        }
        private object get_83_DateTimeContinuousAxis_PlotMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.PlotMode;
        }
        private void set_83_DateTimeContinuousAxis_PlotMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.PlotMode = (global::Telerik.Charting.AxisPlotMode)Value;
        }
        private object get_84_Axis_Title(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.Title;
        }
        private void set_84_Axis_Title(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.Title = (global::System.Object)Value;
        }
        private object get_85_Axis_TitleTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.TitleTemplate;
        }
        private void set_85_Axis_TitleTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.TitleTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_86_Axis_LabelTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelTemplate;
        }
        private void set_86_Axis_LabelTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_87_DateTimeContinuousAxis_PlotStretch(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.PlotStretch;
        }
        private void set_87_DateTimeContinuousAxis_PlotStretch(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.PlotStretch = (global::Telerik.Charting.DateTimePlotStretchMode)Value;
        }
        private object get_88_DateTimeContinuousAxis_MaximumTicks(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.MaximumTicks;
        }
        private void set_88_DateTimeContinuousAxis_MaximumTicks(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.MaximumTicks = (global::System.Int32)Value;
        }
        private object get_89_DateTimeContinuousAxis_GapLength(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.GapLength;
        }
        private void set_89_DateTimeContinuousAxis_GapLength(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.GapLength = (global::System.Double)Value;
        }
        private object get_90_DateTimeContinuousAxis_Minimum(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.Minimum;
        }
        private void set_90_DateTimeContinuousAxis_Minimum(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.Minimum = (global::System.DateTime)Value;
        }
        private object get_91_DateTimeContinuousAxis_Maximum(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.Maximum;
        }
        private void set_91_DateTimeContinuousAxis_Maximum(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            that.Maximum = (global::System.DateTime)Value;
        }
        private object get_92_DateTimeContinuousAxis_ActualRange(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)instance;
            return that.ActualRange;
        }
        private object get_93_CartesianAxis_HorizontalLocation(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)instance;
            return that.HorizontalLocation;
        }
        private void set_93_CartesianAxis_HorizontalLocation(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)instance;
            that.HorizontalLocation = (global::Telerik.Charting.AxisHorizontalLocation)Value;
        }
        private object get_94_CartesianAxis_VerticalLocation(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)instance;
            return that.VerticalLocation;
        }
        private void set_94_CartesianAxis_VerticalLocation(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianAxis)instance;
            that.VerticalLocation = (global::Telerik.Charting.AxisVerticalLocation)Value;
        }
        private object get_95_LineAxis_IsInverse(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineAxis)instance;
            return that.IsInverse;
        }
        private void set_95_LineAxis_IsInverse(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineAxis)instance;
            that.IsInverse = (global::System.Boolean)Value;
        }
        private object get_96_Axis_LabelFormatter(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelFormatter;
        }
        private void set_96_Axis_LabelFormatter(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelFormatter = (global::Telerik.Charting.IContentFormatter)Value;
        }
        private object get_97_Axis_LabelCreator(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelCreator;
        }
        private void set_97_Axis_LabelCreator(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelCreator = (global::Telerik.Charting.ILabelCreator)Value;
        }
        private object get_98_Axis_LabelRotationAngle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelRotationAngle;
        }
        private void set_98_Axis_LabelRotationAngle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelRotationAngle = (global::System.Double)Value;
        }
        private object get_99_Axis_LineStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LineStyle;
        }
        private void set_99_Axis_LineStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_100_Axis_LastLabelVisibility(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LastLabelVisibility;
        }
        private void set_100_Axis_LastLabelVisibility(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LastLabelVisibility = (global::Telerik.Charting.AxisLastLabelVisibility)Value;
        }
        private object get_101_Axis_LabelFormat(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelFormat;
        }
        private void set_101_Axis_LabelFormat(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelFormat = (global::System.String)Value;
        }
        private object get_102_Axis_MajorTickOffset(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.MajorTickOffset;
        }
        private void set_102_Axis_MajorTickOffset(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.MajorTickOffset = (global::System.Int32)Value;
        }
        private object get_103_Axis_LabelOffset(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelOffset;
        }
        private void set_103_Axis_LabelOffset(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelOffset = (global::System.Int32)Value;
        }
        private object get_104_Axis_ShowLabels(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.ShowLabels;
        }
        private void set_104_Axis_ShowLabels(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.ShowLabels = (global::System.Boolean)Value;
        }
        private object get_105_Axis_LabelFitMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelFitMode;
        }
        private void set_105_Axis_LabelFitMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelFitMode = (global::Telerik.Charting.AxisLabelFitMode)Value;
        }
        private object get_106_Axis_LabelTemplateSelector(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelTemplateSelector;
        }
        private void set_106_Axis_LabelTemplateSelector(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_107_Axis_LabelStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelStyle;
        }
        private void set_107_Axis_LabelStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_108_Axis_MajorTickTemplate(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.MajorTickTemplate;
        }
        private void set_108_Axis_MajorTickTemplate(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.MajorTickTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_109_Axis_MajorTickStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.MajorTickStyle;
        }
        private void set_109_Axis_MajorTickStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.MajorTickStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_110_Axis_TickThickness(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.TickThickness;
        }
        private void set_110_Axis_TickThickness(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.TickThickness = (global::System.Double)Value;
        }
        private object get_111_Axis_LabelInterval(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            return that.LabelInterval;
        }
        private void set_111_Axis_LabelInterval(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.Axis)instance;
            that.LabelInterval = (global::System.Int32)Value;
        }
        private object get_112_NumericalAxis_Minimum(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            return that.Minimum;
        }
        private void set_112_NumericalAxis_Minimum(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_113_NumericalAxis_Maximum(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            return that.Maximum;
        }
        private void set_113_NumericalAxis_Maximum(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_114_LinearAxis_MajorStep(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LinearAxis)instance;
            return that.MajorStep;
        }
        private void set_114_LinearAxis_MajorStep(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LinearAxis)instance;
            that.MajorStep = (global::System.Double)Value;
        }
        private object get_115_NumericalAxis_RangeExtendDirection(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            return that.RangeExtendDirection;
        }
        private void set_115_NumericalAxis_RangeExtendDirection(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            that.RangeExtendDirection = (global::Telerik.Charting.NumericalAxisRangeExtendDirection)Value;
        }
        private object get_116_NumericalAxis_DesiredTickCount(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            return that.DesiredTickCount;
        }
        private void set_116_NumericalAxis_DesiredTickCount(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            that.DesiredTickCount = (global::System.Int32)Value;
        }
        private object get_117_NumericalAxis_ActualRange(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.NumericalAxis)instance;
            return that.ActualRange;
        }
        private object get_118_CartesianChartGrid_MajorLinesVisibility(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.MajorLinesVisibility;
        }
        private void set_118_CartesianChartGrid_MajorLinesVisibility(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            that.MajorLinesVisibility = (global::Telerik.UI.Xaml.Controls.Chart.GridLineVisibility)Value;
        }
        private object get_119_CartesianChartGrid_MajorXLinesRenderMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.MajorXLinesRenderMode;
        }
        private void set_119_CartesianChartGrid_MajorXLinesRenderMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            that.MajorXLinesRenderMode = (global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode)Value;
        }
        private object get_120_CartesianChartGrid_MajorYLinesRenderMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.MajorYLinesRenderMode;
        }
        private void set_120_CartesianChartGrid_MajorYLinesRenderMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            that.MajorYLinesRenderMode = (global::Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode)Value;
        }
        private object get_121_CartesianChartGrid_StripLinesVisibility(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.StripLinesVisibility;
        }
        private void set_121_CartesianChartGrid_StripLinesVisibility(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            that.StripLinesVisibility = (global::Telerik.UI.Xaml.Controls.Chart.GridLineVisibility)Value;
        }
        private object get_122_CartesianChartGrid_XStripeBrushes(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.XStripeBrushes;
        }
        private object get_123_CartesianChartGrid_YStripeBrushes(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.YStripeBrushes;
        }
        private object get_124_CartesianChartGrid_MajorXLineStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.MajorXLineStyle;
        }
        private void set_124_CartesianChartGrid_MajorXLineStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            that.MajorXLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_125_CartesianChartGrid_MajorYLineStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            return that.MajorYLineStyle;
        }
        private void set_125_CartesianChartGrid_MajorYLineStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid)instance;
            that.MajorYLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_126_ChartGrid_DefaultStripeBrush(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartGrid)instance;
            return that.DefaultStripeBrush;
        }
        private void set_126_ChartGrid_DefaultStripeBrush(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartGrid)instance;
            that.DefaultStripeBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_127_CategoricalSeriesBase_DataPoints(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase)instance;
            return that.DataPoints;
        }
        private object get_128_CategoricalSeriesBase_ValueBinding(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase)instance;
            return that.ValueBinding;
        }
        private void set_128_CategoricalSeriesBase_ValueBinding(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase)instance;
            that.ValueBinding = (global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding)Value;
        }
        private object get_129_CategoricalSeriesBase_CategoryBinding(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase)instance;
            return that.CategoryBinding;
        }
        private void set_129_CategoricalSeriesBase_CategoryBinding(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase)instance;
            that.CategoryBinding = (global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding)Value;
        }
        private object get_130_CategoricalStrokedSeries_Stroke(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            return that.Stroke;
        }
        private void set_130_CategoricalStrokedSeries_Stroke(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_131_CategoricalStrokedSeries_StrokeThickness(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            return that.StrokeThickness;
        }
        private void set_131_CategoricalStrokedSeries_StrokeThickness(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_132_CategoricalStrokedSeries_StrokeDashArray(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            return that.StrokeDashArray;
        }
        private void set_132_CategoricalStrokedSeries_StrokeDashArray(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            that.StrokeDashArray = (global::Windows.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_133_CategoricalStrokedSeries_StrokeLineJoin(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            return that.StrokeLineJoin;
        }
        private void set_133_CategoricalStrokedSeries_StrokeLineJoin(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries)instance;
            that.StrokeLineJoin = (global::Windows.UI.Xaml.Media.PenLineJoin)Value;
        }
        private object get_134_CategoricalSeries_CombineMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeries)instance;
            return that.CombineMode;
        }
        private void set_134_CategoricalSeries_CombineMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeries)instance;
            that.CombineMode = (global::Telerik.Charting.ChartSeriesCombineMode)Value;
        }
        private object get_135_CategoricalSeries_StackGroupKey(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeries)instance;
            return that.StackGroupKey;
        }
        private void set_135_CategoricalSeries_StackGroupKey(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalSeries)instance;
            that.StackGroupKey = (global::System.Object)Value;
        }
        private object get_136_PropertyNameDataPointBinding_PropertyName(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding)instance;
            return that.PropertyName;
        }
        private void set_136_PropertyNameDataPointBinding_PropertyName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding)instance;
            that.PropertyName = (global::System.String)Value;
        }
        private object get_137_ValuePeriodIndicatorBase_Period(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase)instance;
            return that.Period;
        }
        private void set_137_ValuePeriodIndicatorBase_Period(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase)instance;
            that.Period = (global::System.Int32)Value;
        }
        private object get_138_LineIndicatorBase_Stroke(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            return that.Stroke;
        }
        private void set_138_LineIndicatorBase_Stroke(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_139_LineIndicatorBase_StrokeThickness(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            return that.StrokeThickness;
        }
        private void set_139_LineIndicatorBase_StrokeThickness(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_140_ValueIndicatorBase_ValueBinding(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase)instance;
            return that.ValueBinding;
        }
        private void set_140_ValueIndicatorBase_ValueBinding(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase)instance;
            that.ValueBinding = (global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding)Value;
        }
        private object get_141_LineIndicatorBase_StrokeDashArray(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            return that.StrokeDashArray;
        }
        private void set_141_LineIndicatorBase_StrokeDashArray(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            that.StrokeDashArray = (global::Windows.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_142_LineIndicatorBase_StrokeLineJoin(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            return that.StrokeLineJoin;
        }
        private void set_142_LineIndicatorBase_StrokeLineJoin(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase)instance;
            that.StrokeLineJoin = (global::Windows.UI.Xaml.Media.PenLineJoin)Value;
        }
        private object get_143_ChartUC_ChartItems(object instance)
        {
            var that = (global::TelerikChartTest.Controls.ChartUC)instance;
            return that.ChartItems;
        }
        private void set_143_ChartUC_ChartItems(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Controls.ChartUC)instance;
            that.ChartItems = (global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel>)Value;
        }
        private object get_144_ChartModel_Value(object instance)
        {
            var that = (global::TelerikChartTest.Models.ChartModel)instance;
            return that.Value;
        }
        private void set_144_ChartModel_Value(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Models.ChartModel)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_145_ChartModel_ProcesTime(object instance)
        {
            var that = (global::TelerikChartTest.Models.ChartModel)instance;
            return that.ProcesTime;
        }
        private void set_145_ChartModel_ProcesTime(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Models.ChartModel)instance;
            that.ProcesTime = (global::System.DateTime)Value;
        }
        private object get_146_ChartUC_ChartEventItems(object instance)
        {
            var that = (global::TelerikChartTest.Controls.ChartUC)instance;
            return that.ChartEventItems;
        }
        private void set_146_ChartUC_ChartEventItems(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Controls.ChartUC)instance;
            that.ChartEventItems = (global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartEvent>)Value;
        }
        private object get_147_ChartEvent_EventDescription(object instance)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            return that.EventDescription;
        }
        private void set_147_ChartEvent_EventDescription(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            that.EventDescription = (global::System.String)Value;
        }
        private object get_148_ChartEvent_EventStart(object instance)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            return that.EventStart;
        }
        private void set_148_ChartEvent_EventStart(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            that.EventStart = (global::System.Object)Value;
        }
        private object get_149_ChartEvent_EventEnd(object instance)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            return that.EventEnd;
        }
        private void set_149_ChartEvent_EventEnd(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            that.EventEnd = (global::System.Object)Value;
        }
        private object get_150_ChartEvent_Value(object instance)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            return that.Value;
        }
        private void set_150_ChartEvent_Value(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Models.ChartEvent)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_151_CategoricalAxis_AutoGroup(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            return that.AutoGroup;
        }
        private void set_151_CategoricalAxis_AutoGroup(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            that.AutoGroup = (global::System.Boolean)Value;
        }
        private object get_152_CategoricalAxis_MajorTickInterval(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            return that.MajorTickInterval;
        }
        private void set_152_CategoricalAxis_MajorTickInterval(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            that.MajorTickInterval = (global::System.Int32)Value;
        }
        private object get_153_CategoricalAxis_PlotMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            return that.PlotMode;
        }
        private void set_153_CategoricalAxis_PlotMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            that.PlotMode = (global::Telerik.Charting.AxisPlotMode)Value;
        }
        private object get_154_CategoricalAxis_GapLength(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            return that.GapLength;
        }
        private void set_154_CategoricalAxis_GapLength(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.CategoricalAxis)instance;
            that.GapLength = (global::System.Double)Value;
        }
        private object get_155_BarSeries_PaletteMode(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.BarSeries)instance;
            return that.PaletteMode;
        }
        private void set_155_BarSeries_PaletteMode(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.BarSeries)instance;
            that.PaletteMode = (global::Telerik.UI.Xaml.Controls.Chart.SeriesPaletteMode)Value;
        }
        private object get_156_BarSeries_LegendTitleBinding(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.BarSeries)instance;
            return that.LegendTitleBinding;
        }
        private void set_156_BarSeries_LegendTitleBinding(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.BarSeries)instance;
            that.LegendTitleBinding = (global::Telerik.UI.Xaml.Controls.Chart.DataPointBinding)Value;
        }
        private object get_157_ChartPage_ViewModel(object instance)
        {
            var that = (global::TelerikChartTest.Views.ChartPage)instance;
            return that.ViewModel;
        }
        private object get_158_MainPage_ViewModel(object instance)
        {
            var that = (global::TelerikChartTest.Views.MainPage)instance;
            return that.ViewModel;
        }
        private object get_159_EnumToBooleanConverter_EnumType(object instance)
        {
            var that = (global::TelerikChartTest.Helpers.EnumToBooleanConverter)instance;
            return that.EnumType;
        }
        private void set_159_EnumToBooleanConverter_EnumType(object instance, object Value)
        {
            var that = (global::TelerikChartTest.Helpers.EnumToBooleanConverter)instance;
            that.EnumType = (global::System.Type)Value;
        }
        private object get_160_SettingsPage_ViewModel(object instance)
        {
            var that = (global::TelerikChartTest.Views.SettingsPage)instance;
            return that.ViewModel;
        }
        private object get_161_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_161_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_162_NavHelper_NavigateTo(object instance)
        {
            return global::TelerikChartTest.Helpers.NavHelper.GetNavigateTo((global::Windows.UI.Xaml.Controls.NavigationViewItem)instance);
        }
        private void set_162_NavHelper_NavigateTo(object instance, object Value)
        {
            global::TelerikChartTest.Helpers.NavHelper.SetNavigateTo((global::Windows.UI.Xaml.Controls.NavigationViewItem)instance, (global::System.Type)Value);
        }
        private object get_163_Trigger_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Trigger)instance;
            return that.Actions;
        }
        private object get_164_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_164_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_165_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_165_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_166_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_167_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_167_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_168_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_168_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_169_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_169_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_170_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_170_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_171_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_171_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }
        private object get_172_ShellPage_ViewModel(object instance)
        {
            var that = (global::TelerikChartTest.Views.ShellPage)instance;
            return that.ViewModel;
        }
        private object get_173_D2DTextStyle_Foreground(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            return that.Foreground;
        }
        private void set_173_D2DTextStyle_Foreground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            that.Foreground = (global::Telerik.UI.Drawing.D2DBrush)Value;
        }
        private object get_174_D2DTextStyle_FontWeight(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            return that.FontWeight;
        }
        private void set_174_D2DTextStyle_FontWeight(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            that.FontWeight = (global::Telerik.UI.Drawing.FontWeightName)Value;
        }
        private object get_175_D2DTextStyle_FontSize(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            return that.FontSize;
        }
        private void set_175_D2DTextStyle_FontSize(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_176_D2DTextStyle_FontLocale(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            return that.FontLocale;
        }
        private void set_176_D2DTextStyle_FontLocale(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            that.FontLocale = (global::System.String)Value;
        }
        private object get_177_D2DTextStyle_FontName(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            return that.FontName;
        }
        private void set_177_D2DTextStyle_FontName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            that.FontName = (global::System.String)Value;
        }
        private object get_178_D2DTextStyle_TextAlignment(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            return that.TextAlignment;
        }
        private void set_178_D2DTextStyle_TextAlignment(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            that.TextAlignment = (global::Windows.UI.Xaml.TextAlignment)Value;
        }
        private object get_179_D2DTextStyle_FontStyle(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            return that.FontStyle;
        }
        private void set_179_D2DTextStyle_FontStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DTextStyle)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_180_D2DShapeStyle_StrokeThickness(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            return that.StrokeThickness;
        }
        private void set_180_D2DShapeStyle_StrokeThickness(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_181_D2DShapeStyle_Stroke(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            return that.Stroke;
        }
        private void set_181_D2DShapeStyle_Stroke(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            that.Stroke = (global::Telerik.UI.Drawing.D2DBrush)Value;
        }
        private object get_182_D2DShapeStyle_Foreground(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            return that.Foreground;
        }
        private void set_182_D2DShapeStyle_Foreground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            that.Foreground = (global::Telerik.UI.Drawing.D2DBrush)Value;
        }
        private object get_183_D2DShapeStyle_Fill(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            return that.Fill;
        }
        private void set_183_D2DShapeStyle_Fill(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DShapeStyle)instance;
            that.Fill = (global::Telerik.UI.Drawing.D2DBrush)Value;
        }
        private object get_184_D2DSolidColorBrush_Color(object instance)
        {
            var that = (global::Telerik.UI.Drawing.D2DSolidColorBrush)instance;
            return that.Color;
        }
        private void set_184_D2DSolidColorBrush_Color(object instance, object Value)
        {
            var that = (global::Telerik.UI.Drawing.D2DSolidColorBrush)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_185_ChartAnnotationLabelDefinition_Format(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.Format;
        }
        private void set_185_ChartAnnotationLabelDefinition_Format(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_186_ChartAnnotationLabelDefinition_Template(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.Template;
        }
        private void set_186_ChartAnnotationLabelDefinition_Template(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.Template = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_187_ChartAnnotationLabelDefinition_DefaultVisualStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.DefaultVisualStyle;
        }
        private void set_187_ChartAnnotationLabelDefinition_DefaultVisualStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.DefaultVisualStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_188_ChartAnnotationLabelDefinition_Location(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.Location;
        }
        private void set_188_ChartAnnotationLabelDefinition_Location(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.Location = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation)Value;
        }
        private object get_189_ChartAnnotationLabelDefinition_HorizontalAlignment(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.HorizontalAlignment;
        }
        private void set_189_ChartAnnotationLabelDefinition_HorizontalAlignment(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.HorizontalAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_190_ChartAnnotationLabelDefinition_VerticalAlignment(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.VerticalAlignment;
        }
        private void set_190_ChartAnnotationLabelDefinition_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.VerticalAlignment = (global::Windows.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_191_ChartAnnotationLabelDefinition_HorizontalOffset(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.HorizontalOffset;
        }
        private void set_191_ChartAnnotationLabelDefinition_HorizontalOffset(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.HorizontalOffset = (global::System.Double)Value;
        }
        private object get_192_ChartAnnotationLabelDefinition_VerticalOffset(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            return that.VerticalOffset;
        }
        private void set_192_ChartAnnotationLabelDefinition_VerticalOffset(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition)instance;
            that.VerticalOffset = (global::System.Double)Value;
        }
        private object get_193_ChartPalette_Name(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.Name;
        }
        private void set_193_ChartPalette_Name(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_194_ChartPalette_FillEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.FillEntries;
        }
        private void set_194_ChartPalette_FillEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.FillEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_195_PaletteEntryCollection_Brushes(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)instance;
            return that.Brushes;
        }
        private object get_196_ChartPalette_SpecialFillEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.SpecialFillEntries;
        }
        private void set_196_ChartPalette_SpecialFillEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.SpecialFillEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_197_ChartPalette_StrokeEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.StrokeEntries;
        }
        private void set_197_ChartPalette_StrokeEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.StrokeEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_198_ChartPalette_SpecialStrokeEntries(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            return that.SpecialStrokeEntries;
        }
        private void set_198_ChartPalette_SpecialStrokeEntries(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Chart.ChartPalette)instance;
            that.SpecialStrokeEntries = (global::Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection)Value;
        }
        private object get_199_HexLayoutDefinitionBase_Orientation(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.Orientation;
        }
        private void set_199_HexLayoutDefinitionBase_Orientation(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_200_HexLayoutDefinitionBase_ItemLength(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.ItemLength;
        }
        private void set_200_HexLayoutDefinitionBase_ItemLength(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.ItemLength = (global::System.Double)Value;
        }
        private object get_201_HexLayoutDefinitionBase_ItemsSpacing(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.ItemsSpacing;
        }
        private void set_201_HexLayoutDefinitionBase_ItemsSpacing(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.ItemsSpacing = (global::System.Double)Value;
        }
        private object get_202_HexLayoutDefinitionBase_ViewPortExtension(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            return that.ViewPortExtension;
        }
        private void set_202_HexLayoutDefinitionBase_ViewPortExtension(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase)instance;
            that.ViewPortExtension = (global::System.Double)Value;
        }
        private object get_203_HighlightStyle_FontFamily(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontFamily;
        }
        private void set_203_HighlightStyle_FontFamily(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_204_HighlightStyle_FontWeight(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontWeight;
        }
        private void set_204_HighlightStyle_FontWeight(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontWeight = (global::Telerik.UI.Xaml.Controls.Input.FontWeightName)Value;
        }
        private object get_205_HighlightStyle_FontStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontStyle;
        }
        private void set_205_HighlightStyle_FontStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_206_HighlightStyle_Foreground(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.Foreground;
        }
        private void set_206_HighlightStyle_Foreground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_207_HighlightStyle_FontSize(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            return that.FontSize;
        }
        private void set_207_HighlightStyle_FontSize(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.HighlightStyle)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_208_CalendarCellStyle_ContentStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            return that.ContentStyle;
        }
        private void set_208_CalendarCellStyle_ContentStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            that.ContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_209_CalendarCellStyle_DecorationStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            return that.DecorationStyle;
        }
        private void set_209_CalendarCellStyle_DecorationStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.CalendarCellStyle)instance;
            that.DecorationStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_210_CalendarTimeRulerItemStyleSelector_VerticalLineStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector)instance;
            return that.VerticalLineStyle;
        }
        private void set_210_CalendarTimeRulerItemStyleSelector_VerticalLineStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector)instance;
            that.VerticalLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_211_CalendarTimeRulerItemStyleSelector_HorizontalLineStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector)instance;
            return that.HorizontalLineStyle;
        }
        private void set_211_CalendarTimeRulerItemStyleSelector_HorizontalLineStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector)instance;
            that.HorizontalLineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_212_CalendarTimeRulerItemStyleSelector_TimeLabelStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector)instance;
            return that.TimeLabelStyle;
        }
        private void set_212_CalendarTimeRulerItemStyleSelector_TimeLabelStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector)instance;
            that.TimeLabelStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_213_RadRadialMenu_Items(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.Items;
        }
        private object get_214_RadialMenuItem_ChildItems(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ChildItems;
        }
        private object get_215_RadialMenuItem_ToolTipContent(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ToolTipContent;
        }
        private void set_215_RadialMenuItem_ToolTipContent(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.ToolTipContent = (global::System.Object)Value;
        }
        private object get_216_RadialMenuItem_CommandParameter(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.CommandParameter;
        }
        private void set_216_RadialMenuItem_CommandParameter(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_217_RadialMenuItem_IsEnabled(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.IsEnabled;
        }
        private void set_217_RadialMenuItem_IsEnabled(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.IsEnabled = (global::System.Boolean)Value;
        }
        private object get_218_RadialMenuItem_Command(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Command;
        }
        private void set_218_RadialMenuItem_Command(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_219_RadialMenuItem_ParentItem(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ParentItem;
        }
        private object get_220_RadialMenuItem_IsSelected(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.IsSelected;
        }
        private void set_220_RadialMenuItem_IsSelected(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_221_RadialMenuItem_GroupName(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.GroupName;
        }
        private void set_221_RadialMenuItem_GroupName(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.GroupName = (global::System.String)Value;
        }
        private object get_222_RadialMenuItem_Selectable(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Selectable;
        }
        private void set_222_RadialMenuItem_Selectable(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Selectable = (global::System.Boolean)Value;
        }
        private object get_223_RadialMenuItem_Deselectable(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Deselectable;
        }
        private void set_223_RadialMenuItem_Deselectable(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Deselectable = (global::System.Boolean)Value;
        }
        private object get_224_RadialMenuItem_Header(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.Header;
        }
        private void set_224_RadialMenuItem_Header(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_225_RadialMenuItem_IconContent(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.IconContent;
        }
        private void set_225_RadialMenuItem_IconContent(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.IconContent = (global::System.Object)Value;
        }
        private object get_226_RadialMenuItem_ContentSectorBackground(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            return that.ContentSectorBackground;
        }
        private void set_226_RadialMenuItem_ContentSectorBackground(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem)instance;
            that.ContentSectorBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_227_RadRadialMenu_ShowToolTip(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.ShowToolTip;
        }
        private void set_227_RadRadialMenu_ShowToolTip(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.ShowToolTip = (global::System.Boolean)Value;
        }
        private object get_228_RadRadialMenu_IsOpen(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.IsOpen;
        }
        private void set_228_RadRadialMenu_IsOpen(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_229_RadRadialMenu_StartAngle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.StartAngle;
        }
        private void set_229_RadRadialMenu_StartAngle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.StartAngle = (global::System.Double)Value;
        }
        private object get_230_RadRadialMenu_InnerNavigationRadiusFactor(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.InnerNavigationRadiusFactor;
        }
        private void set_230_RadRadialMenu_InnerNavigationRadiusFactor(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.InnerNavigationRadiusFactor = (global::System.Double)Value;
        }
        private object get_231_RadRadialMenu_InnerRadiusFactor(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.InnerRadiusFactor;
        }
        private void set_231_RadRadialMenu_InnerRadiusFactor(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.InnerRadiusFactor = (global::System.Double)Value;
        }
        private object get_232_RadRadialMenu_OuterRadiusFactor(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.OuterRadiusFactor;
        }
        private void set_232_RadRadialMenu_OuterRadiusFactor(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.OuterRadiusFactor = (global::System.Double)Value;
        }
        private object get_233_RadRadialMenu_ContentMenuBackgroundStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.ContentMenuBackgroundStyle;
        }
        private void set_233_RadRadialMenu_ContentMenuBackgroundStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.ContentMenuBackgroundStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_234_RadRadialMenu_NavigationMenuBackgroundStyle(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.NavigationMenuBackgroundStyle;
        }
        private void set_234_RadRadialMenu_NavigationMenuBackgroundStyle(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            that.NavigationMenuBackgroundStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_235_RadRadialMenu_CommandService(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.CommandService;
        }
        private object get_236_RadRadialMenu_Commands(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.Commands;
        }
        private object get_237_AttachableObject_Owner(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>)instance;
            return that.Owner;
        }
        private object get_238_RadRadialMenu_TargetElement(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu)instance;
            return that.TargetElement;
        }
        private object get_239_RadialMenuTriggerBehavior_AttachTriggers(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior)instance;
            return that.AttachTriggers;
        }
        private void set_239_RadialMenuTriggerBehavior_AttachTriggers(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior)instance;
            that.AttachTriggers = (global::Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers)Value;
        }
        private object get_240_AttachableObject_Owner(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.AttachableObject<global::Windows.UI.Xaml.FrameworkElement>)instance;
            return that.Owner;
        }
        private object get_241_BusyIndicatorAnimationAdapter_Animation(object instance)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter)instance;
            return that.Animation;
        }
        private void set_241_BusyIndicatorAnimationAdapter_Animation(object instance, object Value)
        {
            var that = (global::Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter)instance;
            that.Animation = (global::Windows.UI.Xaml.Media.Animation.Storyboard)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember xamlMember = null;
            global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Telerik.UI.Xaml.Controls.Chart.RadCartesianChart.Series":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadCartesianChart");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Series", "Telerik.UI.Xaml.Controls.Chart.CartesianSeriesCollection");
                xamlMember.Getter = get_0_RadCartesianChart_Series;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianSeries.HorizontalAxis":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HorizontalAxis", "Telerik.UI.Xaml.Controls.Chart.CartesianAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_CartesianSeries_HorizontalAxis;
                xamlMember.Setter = set_1_CartesianSeries_HorizontalAxis;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianSeries.VerticalAxis":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "VerticalAxis", "Telerik.UI.Xaml.Controls.Chart.CartesianAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_CartesianSeries_VerticalAxis;
                xamlMember.Setter = set_2_CartesianSeries_VerticalAxis;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries.DefaultVisualStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DefaultVisualStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_PointTemplateSeries_DefaultVisualStyle;
                xamlMember.Setter = set_3_PointTemplateSeries_DefaultVisualStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries.PointTemplate":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PointTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_PointTemplateSeries_PointTemplate;
                xamlMember.Setter = set_4_PointTemplateSeries_PointTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries.PointTemplateSelector":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PointTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_PointTemplateSeries_PointTemplateSelector;
                xamlMember.Setter = set_5_PointTemplateSeries_PointTemplateSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries.PointTemplates":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PointTemplates", "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.DataTemplate>");
                xamlMember.Getter = get_6_PointTemplateSeries_PointTemplates;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries.LegendTitle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LegendTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_PointTemplateSeries_LegendTitle;
                xamlMember.Setter = set_7_PointTemplateSeries_LegendTitle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries.IsVisibleInLegend":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PointTemplateSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsVisibleInLegend", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_PointTemplateSeries_IsVisibleInLegend;
                xamlMember.Setter = set_8_PointTemplateSeries_IsVisibleInLegend;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.IsSelected":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_ChartSeries_IsSelected;
                xamlMember.Setter = set_9_ChartSeries_IsSelected;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.AllowSelect":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "AllowSelect", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_ChartSeries_AllowSelect;
                xamlMember.Setter = set_10_ChartSeries_AllowSelect;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.PaletteIndex":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PaletteIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_ChartSeries_PaletteIndex;
                xamlMember.Setter = set_11_ChartSeries_PaletteIndex;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.LabelDefinitions":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelDefinitions", "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition>");
                xamlMember.Getter = get_12_ChartSeries_LabelDefinitions;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.Binding":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Binding", "Telerik.UI.Xaml.Controls.Chart.DataPointBinding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ChartSeriesLabelDefinition_Binding;
                xamlMember.Setter = set_13_ChartSeriesLabelDefinition_Binding;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.Format":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ChartSeriesLabelDefinition_Format;
                xamlMember.Setter = set_14_ChartSeriesLabelDefinition_Format;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.Margin":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Margin", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ChartSeriesLabelDefinition_Margin;
                xamlMember.Setter = set_15_ChartSeriesLabelDefinition_Margin;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.HorizontalAlignment":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ChartSeriesLabelDefinition_HorizontalAlignment;
                xamlMember.Setter = set_16_ChartSeriesLabelDefinition_HorizontalAlignment;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.VerticalAlignment":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_ChartSeriesLabelDefinition_VerticalAlignment;
                xamlMember.Setter = set_17_ChartSeriesLabelDefinition_VerticalAlignment;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.Template":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Template", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ChartSeriesLabelDefinition_Template;
                xamlMember.Setter = set_18_ChartSeriesLabelDefinition_Template;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.TemplateSelector":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "TemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ChartSeriesLabelDefinition_TemplateSelector;
                xamlMember.Setter = set_19_ChartSeriesLabelDefinition_TemplateSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.DefaultVisualStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DefaultVisualStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ChartSeriesLabelDefinition_DefaultVisualStyle;
                xamlMember.Setter = set_20_ChartSeriesLabelDefinition_DefaultVisualStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition.Strategy":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Strategy", "Telerik.UI.Xaml.Controls.Chart.ChartSeriesLabelStrategy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_ChartSeriesLabelDefinition_Strategy;
                xamlMember.Setter = set_21_ChartSeriesLabelDefinition_Strategy;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.IsSelectedBinding":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsSelectedBinding", "Telerik.UI.Xaml.Controls.Chart.DataPointBinding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_ChartSeries_IsSelectedBinding;
                xamlMember.Setter = set_22_ChartSeries_IsSelectedBinding;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.ShowLabels":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ShowLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_ChartSeries_ShowLabels;
                xamlMember.Setter = set_23_ChartSeries_ShowLabels;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.DisplayName":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DisplayName", "String");
                xamlMember.Getter = get_24_ChartSeries_DisplayName;
                xamlMember.Setter = set_24_ChartSeries_DisplayName;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.ClipToPlotArea":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ClipToPlotArea", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_ChartSeries_ClipToPlotArea;
                xamlMember.Setter = set_25_ChartSeries_ClipToPlotArea;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.ItemsSource":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_ChartSeries_ItemsSource;
                xamlMember.Setter = set_26_ChartSeries_ItemsSource;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartSeries.ActualPaletteIndex":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ActualPaletteIndex", "Int32");
                xamlMember.Getter = get_27_ChartSeries_ActualPaletteIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter.ZIndex":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ZIndex", "Int32");
                xamlMember.Getter = get_28_ChartElementPresenter_ZIndex;
                xamlMember.Setter = set_28_ChartElementPresenter_ZIndex;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter.Chart":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartElementPresenter");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Chart", "Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember.Getter = get_29_ChartElementPresenter_Chart;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.RadControl.CurrentVisualState":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.RadControl");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CurrentVisualState", "String");
                xamlMember.Getter = get_30_RadControl_CurrentVisualState;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.ClipToBounds":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ClipToBounds", "Boolean");
                xamlMember.Getter = get_31_RadChartBase_ClipToBounds;
                xamlMember.Setter = set_31_RadChartBase_ClipToBounds;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.Behaviors":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Behaviors", "Telerik.UI.Xaml.Controls.Chart.ChartBehaviorCollection");
                xamlMember.Getter = get_32_RadChartBase_Behaviors;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartBehavior.Chart":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Chart", "Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember.Getter = get_33_ChartBehavior_Chart;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadCartesianChart.HorizontalAxis":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadCartesianChart");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HorizontalAxis", "Telerik.UI.Xaml.Controls.Chart.CartesianAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_RadCartesianChart_HorizontalAxis;
                xamlMember.Setter = set_34_RadCartesianChart_HorizontalAxis;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadCartesianChart.VerticalAxis":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadCartesianChart");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "VerticalAxis", "Telerik.UI.Xaml.Controls.Chart.CartesianAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_RadCartesianChart_VerticalAxis;
                xamlMember.Setter = set_35_RadCartesianChart_VerticalAxis;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadCartesianChart.Grid":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadCartesianChart");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Grid", "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember.Getter = get_36_RadCartesianChart_Grid;
                xamlMember.Setter = set_36_RadCartesianChart_Grid;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadCartesianChart.Indicators":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadCartesianChart");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Indicators", "Telerik.UI.Xaml.Controls.Chart.IndicatorCollection");
                xamlMember.Getter = get_37_RadCartesianChart_Indicators;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.IndicatorBase.DataPoints":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.IndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DataPoints", "Telerik.Charting.DataPointCollection`1<Telerik.Charting.CategoricalDataPoint>");
                xamlMember.Getter = get_38_IndicatorBase_DataPoints;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Charting.CategoricalDataPoint.Value":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Charting.CategoricalDataPoint");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.Getter = get_39_CategoricalDataPoint_Value;
                xamlMember.Setter = set_39_CategoricalDataPoint_Value;
                break;
            case "Telerik.Charting.CategoricalDataPointBase.Category":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Charting.CategoricalDataPointBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Category", "Object");
                xamlMember.Getter = get_40_CategoricalDataPointBase_Category;
                xamlMember.Setter = set_40_CategoricalDataPointBase_Category;
                break;
            case "Telerik.Charting.DataPoint.Label":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Charting.DataPoint");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Label", "Object");
                xamlMember.Getter = get_41_DataPoint_Label;
                xamlMember.Setter = set_41_DataPoint_Label;
                break;
            case "Telerik.Charting.DataPoint.DataItem":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Charting.DataPoint");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DataItem", "Object");
                xamlMember.Getter = get_42_DataPoint_DataItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Charting.DataPoint.IsSelected":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Charting.DataPoint");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.Getter = get_43_DataPoint_IsSelected;
                xamlMember.Setter = set_43_DataPoint_IsSelected;
                break;
            case "Telerik.Core.Node.Presenter":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Presenter", "Telerik.Core.IElementPresenter");
                xamlMember.Getter = get_44_Node_Presenter;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Core.Node.IsArrangeValid":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsArrangeValid", "Boolean");
                xamlMember.Getter = get_45_Node_IsArrangeValid;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Core.Node.NodeState":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "NodeState", "Telerik.Core.NodeState");
                xamlMember.Getter = get_46_Node_NodeState;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Core.Node.Index":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Index", "Int32");
                xamlMember.Getter = get_47_Node_Index;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Core.Node.CollectionIndex":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CollectionIndex", "Int32");
                xamlMember.Getter = get_48_Node_CollectionIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Core.Node.IsTreeLoaded":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsTreeLoaded", "Boolean");
                xamlMember.Getter = get_49_Node_IsTreeLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Core.Node.LayoutSlot":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LayoutSlot", "Telerik.Core.RadRect");
                xamlMember.Getter = get_50_Node_LayoutSlot;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.Core.Node.Parent":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.Core.Node");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Parent", "Telerik.Core.Element");
                xamlMember.Getter = get_51_Node_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.IndicatorBase.CategoryBinding":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.IndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CategoryBinding", "Telerik.UI.Xaml.Controls.Chart.DataPointBinding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_IndicatorBase_CategoryBinding;
                xamlMember.Setter = set_52_IndicatorBase_CategoryBinding;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadCartesianChart.Annotations":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadCartesianChart");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Annotations", "Telerik.UI.Xaml.Controls.Chart.CartesianAnnotationCollection");
                xamlMember.Getter = get_53_RadCartesianChart_Annotations;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotation.ClipToPlotArea":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotation");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ClipToPlotArea", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_ChartAnnotation_ClipToPlotArea;
                xamlMember.Setter = set_54_ChartAnnotation_ClipToPlotArea;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.SeriesProvider":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "SeriesProvider", "Telerik.UI.Xaml.Controls.Chart.ChartSeriesProvider");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_RadChartBase_SeriesProvider;
                xamlMember.Setter = set_55_RadChartBase_SeriesProvider;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.EmptyContent":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "EmptyContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_RadChartBase_EmptyContent;
                xamlMember.Setter = set_56_RadChartBase_EmptyContent;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.EmptyContentTemplate":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "EmptyContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_RadChartBase_EmptyContentTemplate;
                xamlMember.Setter = set_57_RadChartBase_EmptyContentTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.PlotAreaStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PlotAreaStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_RadChartBase_PlotAreaStyle;
                xamlMember.Setter = set_58_RadChartBase_PlotAreaStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.Palette":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Palette", "Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_RadChartBase_Palette;
                xamlMember.Setter = set_59_RadChartBase_Palette;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.PaletteName":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PaletteName", "Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_RadChartBase_PaletteName;
                xamlMember.Setter = set_60_RadChartBase_PaletteName;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.SelectionPalette":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "SelectionPalette", "Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_RadChartBase_SelectionPalette;
                xamlMember.Setter = set_61_RadChartBase_SelectionPalette;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.SelectionPaletteName":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "SelectionPaletteName", "Telerik.UI.Xaml.Controls.Chart.PredefinedPaletteName");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_RadChartBase_SelectionPaletteName;
                xamlMember.Setter = set_62_RadChartBase_SelectionPaletteName;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.ContainerVisualsFactory":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ContainerVisualsFactory", "Telerik.UI.Xaml.Controls.Chart.ContainerVisualsFactory");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_RadChartBase_ContainerVisualsFactory;
                xamlMember.Setter = set_63_RadChartBase_ContainerVisualsFactory;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.Zoom":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Zoom", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_RadChartBase_Zoom;
                xamlMember.Setter = set_64_RadChartBase_Zoom;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.MaxZoom":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MaxZoom", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_RadChartBase_MaxZoom;
                xamlMember.Setter = set_65_RadChartBase_MaxZoom;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.MinZoom":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MinZoom", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_RadChartBase_MinZoom;
                xamlMember.Setter = set_66_RadChartBase_MinZoom;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.PlotOrigin":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PlotOrigin", "Windows.Foundation.Point");
                xamlMember.Getter = get_67_RadChartBase_PlotOrigin;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.PlotAreaClip":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PlotAreaClip", "Telerik.Core.RadRect");
                xamlMember.Getter = get_68_RadChartBase_PlotAreaClip;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.RadChartBase.ScrollOffset":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.RadChartBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ScrollOffset", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_RadChartBase_ScrollOffset;
                xamlMember.Setter = set_69_RadChartBase_ScrollOffset;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior.PanMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PanMode", "Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode");
                xamlMember.Getter = get_70_ChartPanAndZoomBehavior_PanMode;
                xamlMember.Setter = set_70_ChartPanAndZoomBehavior_PanMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior.ZoomMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ZoomMode", "Telerik.UI.Xaml.Controls.Chart.ChartPanZoomMode");
                xamlMember.Getter = get_71_ChartPanAndZoomBehavior_ZoomMode;
                xamlMember.Setter = set_71_ChartPanAndZoomBehavior_ZoomMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior.HandleDoubleTap":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPanAndZoomBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HandleDoubleTap", "Boolean");
                xamlMember.Getter = get_72_ChartPanAndZoomBehavior_HandleDoubleTap;
                xamlMember.Setter = set_72_ChartPanAndZoomBehavior_HandleDoubleTap;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.ShowIntersectionPoints":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ShowIntersectionPoints", "Boolean");
                xamlMember.Getter = get_73_ChartTrackBallBehavior_ShowIntersectionPoints;
                xamlMember.Setter = set_73_ChartTrackBallBehavior_ShowIntersectionPoints;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.LineStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_ChartTrackBallBehavior_LineStyle;
                xamlMember.Setter = set_74_ChartTrackBallBehavior_LineStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.InfoStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "InfoStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_ChartTrackBallBehavior_InfoStyle;
                xamlMember.Setter = set_75_ChartTrackBallBehavior_InfoStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.ShowInfo":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ShowInfo", "Boolean");
                xamlMember.Getter = get_76_ChartTrackBallBehavior_ShowInfo;
                xamlMember.Setter = set_76_ChartTrackBallBehavior_ShowInfo;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.SnapMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "SnapMode", "Telerik.UI.Xaml.Controls.Chart.TrackBallSnapMode");
                xamlMember.Getter = get_77_ChartTrackBallBehavior_SnapMode;
                xamlMember.Setter = set_77_ChartTrackBallBehavior_SnapMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.InfoMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "InfoMode", "Telerik.UI.Xaml.Controls.Chart.TrackInfoMode");
                xamlMember.Getter = get_78_ChartTrackBallBehavior_InfoMode;
                xamlMember.Setter = set_78_ChartTrackBallBehavior_InfoMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.TrackInfoTemplate":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "TrackInfoTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_79_ChartTrackBallBehavior_TrackInfoTemplate;
                xamlMember.Setter = set_79_ChartTrackBallBehavior_TrackInfoTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior.IntersectionTemplate":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IntersectionTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_80_ChartTrackBallBehavior_IntersectionTemplate;
                xamlMember.Setter = set_80_ChartTrackBallBehavior_IntersectionTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.MajorStepUnit":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorStepUnit", "Telerik.Charting.TimeInterval");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_DateTimeContinuousAxis_MajorStepUnit;
                xamlMember.Setter = set_81_DateTimeContinuousAxis_MajorStepUnit;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.MajorStep":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorStep", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_DateTimeContinuousAxis_MajorStep;
                xamlMember.Setter = set_82_DateTimeContinuousAxis_MajorStep;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.PlotMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PlotMode", "Telerik.Charting.AxisPlotMode");
                xamlMember.Getter = get_83_DateTimeContinuousAxis_PlotMode;
                xamlMember.Setter = set_83_DateTimeContinuousAxis_PlotMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.Title":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Title", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_Axis_Title;
                xamlMember.Setter = set_84_Axis_Title;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.TitleTemplate":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "TitleTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_Axis_TitleTemplate;
                xamlMember.Setter = set_85_Axis_TitleTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelTemplate":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_Axis_LabelTemplate;
                xamlMember.Setter = set_86_Axis_LabelTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.PlotStretch":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PlotStretch", "Telerik.Charting.DateTimePlotStretchMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_DateTimeContinuousAxis_PlotStretch;
                xamlMember.Setter = set_87_DateTimeContinuousAxis_PlotStretch;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.MaximumTicks":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MaximumTicks", "Int32");
                xamlMember.Getter = get_88_DateTimeContinuousAxis_MaximumTicks;
                xamlMember.Setter = set_88_DateTimeContinuousAxis_MaximumTicks;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.GapLength":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "GapLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_DateTimeContinuousAxis_GapLength;
                xamlMember.Setter = set_89_DateTimeContinuousAxis_GapLength;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.Minimum":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Minimum", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_DateTimeContinuousAxis_Minimum;
                xamlMember.Setter = set_90_DateTimeContinuousAxis_Minimum;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.Maximum":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Maximum", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_DateTimeContinuousAxis_Maximum;
                xamlMember.Setter = set_91_DateTimeContinuousAxis_Maximum;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis.ActualRange":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ActualRange", "Telerik.Core.ValueRange`1<System.DateTime>");
                xamlMember.Getter = get_92_DateTimeContinuousAxis_ActualRange;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianAxis.HorizontalLocation":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HorizontalLocation", "Telerik.Charting.AxisHorizontalLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_CartesianAxis_HorizontalLocation;
                xamlMember.Setter = set_93_CartesianAxis_HorizontalLocation;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianAxis.VerticalLocation":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "VerticalLocation", "Telerik.Charting.AxisVerticalLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_CartesianAxis_VerticalLocation;
                xamlMember.Setter = set_94_CartesianAxis_VerticalLocation;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.LineAxis.IsInverse":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsInverse", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_LineAxis_IsInverse;
                xamlMember.Setter = set_95_LineAxis_IsInverse;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelFormatter":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelFormatter", "Telerik.Charting.IContentFormatter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_Axis_LabelFormatter;
                xamlMember.Setter = set_96_Axis_LabelFormatter;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelCreator":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelCreator", "Telerik.Charting.ILabelCreator");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_Axis_LabelCreator;
                xamlMember.Setter = set_97_Axis_LabelCreator;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelRotationAngle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelRotationAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_Axis_LabelRotationAngle;
                xamlMember.Setter = set_98_Axis_LabelRotationAngle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LineStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_Axis_LineStyle;
                xamlMember.Setter = set_99_Axis_LineStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LastLabelVisibility":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LastLabelVisibility", "Telerik.Charting.AxisLastLabelVisibility");
                xamlMember.Getter = get_100_Axis_LastLabelVisibility;
                xamlMember.Setter = set_100_Axis_LastLabelVisibility;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelFormat":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_Axis_LabelFormat;
                xamlMember.Setter = set_101_Axis_LabelFormat;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.MajorTickOffset":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorTickOffset", "Int32");
                xamlMember.Getter = get_102_Axis_MajorTickOffset;
                xamlMember.Setter = set_102_Axis_MajorTickOffset;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelOffset":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelOffset", "Int32");
                xamlMember.Getter = get_103_Axis_LabelOffset;
                xamlMember.Setter = set_103_Axis_LabelOffset;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.ShowLabels":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ShowLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_Axis_ShowLabels;
                xamlMember.Setter = set_104_Axis_ShowLabels;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelFitMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelFitMode", "Telerik.Charting.AxisLabelFitMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_Axis_LabelFitMode;
                xamlMember.Setter = set_105_Axis_LabelFitMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelTemplateSelector":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_Axis_LabelTemplateSelector;
                xamlMember.Setter = set_106_Axis_LabelTemplateSelector;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_Axis_LabelStyle;
                xamlMember.Setter = set_107_Axis_LabelStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.MajorTickTemplate":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorTickTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_Axis_MajorTickTemplate;
                xamlMember.Setter = set_108_Axis_MajorTickTemplate;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.MajorTickStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorTickStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_Axis_MajorTickStyle;
                xamlMember.Setter = set_109_Axis_MajorTickStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.TickThickness":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "TickThickness", "Double");
                xamlMember.Getter = get_110_Axis_TickThickness;
                xamlMember.Setter = set_110_Axis_TickThickness;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.Axis.LabelInterval":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.Axis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LabelInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_Axis_LabelInterval;
                xamlMember.Setter = set_111_Axis_LabelInterval;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.NumericalAxis.Minimum":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.NumericalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_NumericalAxis_Minimum;
                xamlMember.Setter = set_112_NumericalAxis_Minimum;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.NumericalAxis.Maximum":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.NumericalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_NumericalAxis_Maximum;
                xamlMember.Setter = set_113_NumericalAxis_Maximum;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.LinearAxis.MajorStep":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LinearAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorStep", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_LinearAxis_MajorStep;
                xamlMember.Setter = set_114_LinearAxis_MajorStep;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.NumericalAxis.RangeExtendDirection":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.NumericalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "RangeExtendDirection", "Telerik.Charting.NumericalAxisRangeExtendDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_NumericalAxis_RangeExtendDirection;
                xamlMember.Setter = set_115_NumericalAxis_RangeExtendDirection;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.NumericalAxis.DesiredTickCount":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.NumericalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DesiredTickCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_NumericalAxis_DesiredTickCount;
                xamlMember.Setter = set_116_NumericalAxis_DesiredTickCount;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.NumericalAxis.ActualRange":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.NumericalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ActualRange", "Telerik.Core.ValueRange`1<Double>");
                xamlMember.Getter = get_117_NumericalAxis_ActualRange;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.MajorLinesVisibility":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorLinesVisibility", "Telerik.UI.Xaml.Controls.Chart.GridLineVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_CartesianChartGrid_MajorLinesVisibility;
                xamlMember.Setter = set_118_CartesianChartGrid_MajorLinesVisibility;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.MajorXLinesRenderMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorXLinesRenderMode", "Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode");
                xamlMember.Getter = get_119_CartesianChartGrid_MajorXLinesRenderMode;
                xamlMember.Setter = set_119_CartesianChartGrid_MajorXLinesRenderMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.MajorYLinesRenderMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorYLinesRenderMode", "Telerik.UI.Xaml.Controls.Chart.GridLineRenderMode");
                xamlMember.Getter = get_120_CartesianChartGrid_MajorYLinesRenderMode;
                xamlMember.Setter = set_120_CartesianChartGrid_MajorYLinesRenderMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.StripLinesVisibility":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StripLinesVisibility", "Telerik.UI.Xaml.Controls.Chart.GridLineVisibility");
                xamlMember.Getter = get_121_CartesianChartGrid_StripLinesVisibility;
                xamlMember.Setter = set_121_CartesianChartGrid_StripLinesVisibility;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.XStripeBrushes":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "XStripeBrushes", "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.Brush>");
                xamlMember.Getter = get_122_CartesianChartGrid_XStripeBrushes;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.YStripeBrushes":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "YStripeBrushes", "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.Brush>");
                xamlMember.Getter = get_123_CartesianChartGrid_YStripeBrushes;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.MajorXLineStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorXLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_CartesianChartGrid_MajorXLineStyle;
                xamlMember.Setter = set_124_CartesianChartGrid_MajorXLineStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid.MajorYLineStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CartesianChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorYLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_CartesianChartGrid_MajorYLineStyle;
                xamlMember.Setter = set_125_CartesianChartGrid_MajorYLineStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartGrid.DefaultStripeBrush":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartGrid");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DefaultStripeBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_ChartGrid_DefaultStripeBrush;
                xamlMember.Setter = set_126_ChartGrid_DefaultStripeBrush;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.DataPoints":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DataPoints", "Telerik.Charting.DataPointCollection`1<Telerik.Charting.CategoricalDataPoint>");
                xamlMember.Getter = get_127_CategoricalSeriesBase_DataPoints;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.ValueBinding":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ValueBinding", "Telerik.UI.Xaml.Controls.Chart.DataPointBinding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_CategoricalSeriesBase_ValueBinding;
                xamlMember.Setter = set_128_CategoricalSeriesBase_ValueBinding;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase.CategoryBinding":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeriesBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CategoryBinding", "Telerik.UI.Xaml.Controls.Chart.DataPointBinding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_CategoricalSeriesBase_CategoryBinding;
                xamlMember.Setter = set_129_CategoricalSeriesBase_CategoryBinding;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries.Stroke":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_CategoricalStrokedSeries_Stroke;
                xamlMember.Setter = set_130_CategoricalStrokedSeries_Stroke;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries.StrokeThickness":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_CategoricalStrokedSeries_StrokeThickness;
                xamlMember.Setter = set_131_CategoricalStrokedSeries_StrokeThickness;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries.StrokeDashArray":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Windows.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_CategoricalStrokedSeries_StrokeDashArray;
                xamlMember.Setter = set_132_CategoricalStrokedSeries_StrokeDashArray;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries.StrokeLineJoin":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalStrokedSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeLineJoin", "Windows.UI.Xaml.Media.PenLineJoin");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_CategoricalStrokedSeries_StrokeLineJoin;
                xamlMember.Setter = set_133_CategoricalStrokedSeries_StrokeLineJoin;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalSeries.CombineMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CombineMode", "Telerik.Charting.ChartSeriesCombineMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_CategoricalSeries_CombineMode;
                xamlMember.Setter = set_134_CategoricalSeries_CombineMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalSeries.StackGroupKey":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StackGroupKey", "Object");
                xamlMember.Getter = get_135_CategoricalSeries_StackGroupKey;
                xamlMember.Setter = set_135_CategoricalSeries_StackGroupKey;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding.PropertyName":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PropertyNameDataPointBinding");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PropertyName", "String");
                xamlMember.Getter = get_136_PropertyNameDataPointBinding_PropertyName;
                xamlMember.Setter = set_136_PropertyNameDataPointBinding_PropertyName;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase.Period":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ValuePeriodIndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Period", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_ValuePeriodIndicatorBase_Period;
                xamlMember.Setter = set_137_ValuePeriodIndicatorBase_Period;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase.Stroke":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_LineIndicatorBase_Stroke;
                xamlMember.Setter = set_138_LineIndicatorBase_Stroke;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase.StrokeThickness":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_LineIndicatorBase_StrokeThickness;
                xamlMember.Setter = set_139_LineIndicatorBase_StrokeThickness;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase.ValueBinding":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ValueIndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ValueBinding", "Telerik.UI.Xaml.Controls.Chart.DataPointBinding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_ValueIndicatorBase_ValueBinding;
                xamlMember.Setter = set_140_ValueIndicatorBase_ValueBinding;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase.StrokeDashArray":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Windows.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_LineIndicatorBase_StrokeDashArray;
                xamlMember.Setter = set_141_LineIndicatorBase_StrokeDashArray;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase.StrokeLineJoin":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.LineIndicatorBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeLineJoin", "Windows.UI.Xaml.Media.PenLineJoin");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_LineIndicatorBase_StrokeLineJoin;
                xamlMember.Setter = set_142_LineIndicatorBase_StrokeLineJoin;
                break;
            case "TelerikChartTest.Controls.ChartUC.ChartItems":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Controls.ChartUC");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ChartItems", "System.Collections.ObjectModel.ObservableCollection`1<TelerikChartTest.Models.ChartModel>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_ChartUC_ChartItems;
                xamlMember.Setter = set_143_ChartUC_ChartItems;
                break;
            case "TelerikChartTest.Models.ChartModel.Value":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Models.ChartModel");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.Getter = get_144_ChartModel_Value;
                xamlMember.Setter = set_144_ChartModel_Value;
                break;
            case "TelerikChartTest.Models.ChartModel.ProcesTime":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Models.ChartModel");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ProcesTime", "System.DateTime");
                xamlMember.Getter = get_145_ChartModel_ProcesTime;
                xamlMember.Setter = set_145_ChartModel_ProcesTime;
                break;
            case "TelerikChartTest.Controls.ChartUC.ChartEventItems":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Controls.ChartUC");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ChartEventItems", "System.Collections.ObjectModel.ObservableCollection`1<TelerikChartTest.Models.ChartEvent>");
                xamlMember.Getter = get_146_ChartUC_ChartEventItems;
                xamlMember.Setter = set_146_ChartUC_ChartEventItems;
                break;
            case "TelerikChartTest.Models.ChartEvent.EventDescription":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Models.ChartEvent");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "EventDescription", "String");
                xamlMember.Getter = get_147_ChartEvent_EventDescription;
                xamlMember.Setter = set_147_ChartEvent_EventDescription;
                break;
            case "TelerikChartTest.Models.ChartEvent.EventStart":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Models.ChartEvent");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "EventStart", "Object");
                xamlMember.Getter = get_148_ChartEvent_EventStart;
                xamlMember.Setter = set_148_ChartEvent_EventStart;
                break;
            case "TelerikChartTest.Models.ChartEvent.EventEnd":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Models.ChartEvent");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "EventEnd", "Object");
                xamlMember.Getter = get_149_ChartEvent_EventEnd;
                xamlMember.Setter = set_149_ChartEvent_EventEnd;
                break;
            case "TelerikChartTest.Models.ChartEvent.Value":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Models.ChartEvent");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.Getter = get_150_ChartEvent_Value;
                xamlMember.Setter = set_150_ChartEvent_Value;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalAxis.AutoGroup":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "AutoGroup", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_CategoricalAxis_AutoGroup;
                xamlMember.Setter = set_151_CategoricalAxis_AutoGroup;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalAxis.MajorTickInterval":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "MajorTickInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_CategoricalAxis_MajorTickInterval;
                xamlMember.Setter = set_152_CategoricalAxis_MajorTickInterval;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalAxis.PlotMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PlotMode", "Telerik.Charting.AxisPlotMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_CategoricalAxis_PlotMode;
                xamlMember.Setter = set_153_CategoricalAxis_PlotMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.CategoricalAxis.GapLength":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.CategoricalAxis");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "GapLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_CategoricalAxis_GapLength;
                xamlMember.Setter = set_154_CategoricalAxis_GapLength;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.BarSeries.PaletteMode":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.BarSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "PaletteMode", "Telerik.UI.Xaml.Controls.Chart.SeriesPaletteMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_BarSeries_PaletteMode;
                xamlMember.Setter = set_155_BarSeries_PaletteMode;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.BarSeries.LegendTitleBinding":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.BarSeries");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "LegendTitleBinding", "Telerik.UI.Xaml.Controls.Chart.DataPointBinding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_BarSeries_LegendTitleBinding;
                xamlMember.Setter = set_156_BarSeries_LegendTitleBinding;
                break;
            case "TelerikChartTest.Views.ChartPage.ViewModel":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Views.ChartPage");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ViewModel", "TelerikChartTest.ViewModels.ChartViewModel");
                xamlMember.Getter = get_157_ChartPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TelerikChartTest.Views.MainPage.ViewModel":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Views.MainPage");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ViewModel", "TelerikChartTest.ViewModels.MainViewModel");
                xamlMember.Getter = get_158_MainPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "TelerikChartTest.Helpers.EnumToBooleanConverter.EnumType":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Helpers.EnumToBooleanConverter");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "EnumType", "System.Type");
                xamlMember.Getter = get_159_EnumToBooleanConverter_EnumType;
                xamlMember.Setter = set_159_EnumToBooleanConverter_EnumType;
                break;
            case "TelerikChartTest.Views.SettingsPage.ViewModel":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Views.SettingsPage");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ViewModel", "TelerikChartTest.ViewModels.SettingsViewModel");
                xamlMember.Getter = get_160_SettingsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_161_Interaction_Behaviors;
                xamlMember.Setter = set_161_Interaction_Behaviors;
                break;
            case "TelerikChartTest.Helpers.NavHelper.NavigateTo":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Helpers.NavHelper");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "NavigateTo", "System.Type");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_162_NavHelper_NavigateTo;
                xamlMember.Setter = set_162_NavHelper_NavigateTo;
                break;
            case "Microsoft.Xaml.Interactivity.Trigger.Actions":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_Trigger_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_164_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_165_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_166_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_InvokeCommandAction_Command;
                xamlMember.Setter = set_167_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_168_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_169_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_170_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_171_InvokeCommandAction_InputConverterLanguage;
                break;
            case "TelerikChartTest.Views.ShellPage.ViewModel":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("TelerikChartTest.Views.ShellPage");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ViewModel", "TelerikChartTest.ViewModels.ShellViewModel");
                xamlMember.Getter = get_172_ShellPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Drawing.D2DTextStyle.Foreground":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DTextStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Foreground", "Telerik.UI.Drawing.D2DBrush");
                xamlMember.Getter = get_173_D2DTextStyle_Foreground;
                xamlMember.Setter = set_173_D2DTextStyle_Foreground;
                break;
            case "Telerik.UI.Drawing.D2DTextStyle.FontWeight":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DTextStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontWeight", "Telerik.UI.Drawing.FontWeightName");
                xamlMember.Getter = get_174_D2DTextStyle_FontWeight;
                xamlMember.Setter = set_174_D2DTextStyle_FontWeight;
                break;
            case "Telerik.UI.Drawing.D2DTextStyle.FontSize":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DTextStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_175_D2DTextStyle_FontSize;
                xamlMember.Setter = set_175_D2DTextStyle_FontSize;
                break;
            case "Telerik.UI.Drawing.D2DTextStyle.FontLocale":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DTextStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontLocale", "String");
                xamlMember.Getter = get_176_D2DTextStyle_FontLocale;
                xamlMember.Setter = set_176_D2DTextStyle_FontLocale;
                break;
            case "Telerik.UI.Drawing.D2DTextStyle.FontName":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DTextStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontName", "String");
                xamlMember.Getter = get_177_D2DTextStyle_FontName;
                xamlMember.Setter = set_177_D2DTextStyle_FontName;
                break;
            case "Telerik.UI.Drawing.D2DTextStyle.TextAlignment":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DTextStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "TextAlignment", "Windows.UI.Xaml.TextAlignment");
                xamlMember.Getter = get_178_D2DTextStyle_TextAlignment;
                xamlMember.Setter = set_178_D2DTextStyle_TextAlignment;
                break;
            case "Telerik.UI.Drawing.D2DTextStyle.FontStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DTextStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.Getter = get_179_D2DTextStyle_FontStyle;
                xamlMember.Setter = set_179_D2DTextStyle_FontStyle;
                break;
            case "Telerik.UI.Drawing.D2DShapeStyle.StrokeThickness":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DShapeStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.Getter = get_180_D2DShapeStyle_StrokeThickness;
                xamlMember.Setter = set_180_D2DShapeStyle_StrokeThickness;
                break;
            case "Telerik.UI.Drawing.D2DShapeStyle.Stroke":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DShapeStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Stroke", "Telerik.UI.Drawing.D2DBrush");
                xamlMember.Getter = get_181_D2DShapeStyle_Stroke;
                xamlMember.Setter = set_181_D2DShapeStyle_Stroke;
                break;
            case "Telerik.UI.Drawing.D2DShapeStyle.Foreground":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DShapeStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Foreground", "Telerik.UI.Drawing.D2DBrush");
                xamlMember.Getter = get_182_D2DShapeStyle_Foreground;
                xamlMember.Setter = set_182_D2DShapeStyle_Foreground;
                break;
            case "Telerik.UI.Drawing.D2DShapeStyle.Fill":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DShapeStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Fill", "Telerik.UI.Drawing.D2DBrush");
                xamlMember.Getter = get_183_D2DShapeStyle_Fill;
                xamlMember.Setter = set_183_D2DShapeStyle_Fill;
                break;
            case "Telerik.UI.Drawing.D2DSolidColorBrush.Color":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Drawing.D2DSolidColorBrush");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.Getter = get_184_D2DSolidColorBrush_Color;
                xamlMember.Setter = set_184_D2DSolidColorBrush_Color;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.Format":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_185_ChartAnnotationLabelDefinition_Format;
                xamlMember.Setter = set_185_ChartAnnotationLabelDefinition_Format;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.Template":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Template", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_186_ChartAnnotationLabelDefinition_Template;
                xamlMember.Setter = set_186_ChartAnnotationLabelDefinition_Template;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.DefaultVisualStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DefaultVisualStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_ChartAnnotationLabelDefinition_DefaultVisualStyle;
                xamlMember.Setter = set_187_ChartAnnotationLabelDefinition_DefaultVisualStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.Location":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Location", "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_188_ChartAnnotationLabelDefinition_Location;
                xamlMember.Setter = set_188_ChartAnnotationLabelDefinition_Location;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.HorizontalAlignment":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_ChartAnnotationLabelDefinition_HorizontalAlignment;
                xamlMember.Setter = set_189_ChartAnnotationLabelDefinition_HorizontalAlignment;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.VerticalAlignment":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Windows.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_190_ChartAnnotationLabelDefinition_VerticalAlignment;
                xamlMember.Setter = set_190_ChartAnnotationLabelDefinition_VerticalAlignment;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.HorizontalOffset":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_191_ChartAnnotationLabelDefinition_HorizontalOffset;
                xamlMember.Setter = set_191_ChartAnnotationLabelDefinition_HorizontalOffset;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition.VerticalOffset":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartAnnotationLabelDefinition");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_192_ChartAnnotationLabelDefinition_VerticalOffset;
                xamlMember.Setter = set_192_ChartAnnotationLabelDefinition_VerticalOffset;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.Name":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_193_ChartPalette_Name;
                xamlMember.Setter = set_193_ChartPalette_Name;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.FillEntries":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FillEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_194_ChartPalette_FillEntries;
                xamlMember.Setter = set_194_ChartPalette_FillEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection.Brushes":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Brushes", "System.Collections.Generic.List`1<Windows.UI.Xaml.Media.Brush>");
                xamlMember.Getter = get_195_PaletteEntryCollection_Brushes;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.SpecialFillEntries":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "SpecialFillEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_196_ChartPalette_SpecialFillEntries;
                xamlMember.Setter = set_196_ChartPalette_SpecialFillEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.StrokeEntries":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StrokeEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_197_ChartPalette_StrokeEntries;
                xamlMember.Setter = set_197_ChartPalette_StrokeEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Chart.ChartPalette.SpecialStrokeEntries":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Chart.ChartPalette");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "SpecialStrokeEntries", "Telerik.UI.Xaml.Controls.Chart.PaletteEntryCollection");
                xamlMember.Getter = get_198_ChartPalette_SpecialStrokeEntries;
                xamlMember.Setter = set_198_ChartPalette_SpecialStrokeEntries;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.Orientation":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_199_HexLayoutDefinitionBase_Orientation;
                xamlMember.Setter = set_199_HexLayoutDefinitionBase_Orientation;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.ItemLength":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ItemLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_200_HexLayoutDefinitionBase_ItemLength;
                xamlMember.Setter = set_200_HexLayoutDefinitionBase_ItemLength;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.ItemsSpacing":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ItemsSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_201_HexLayoutDefinitionBase_ItemsSpacing;
                xamlMember.Setter = set_201_HexLayoutDefinitionBase_ItemsSpacing;
                break;
            case "Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase.ViewPortExtension":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Data.HexView.HexLayoutDefinitionBase");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ViewPortExtension", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_202_HexLayoutDefinitionBase_ViewPortExtension;
                xamlMember.Setter = set_202_HexLayoutDefinitionBase_ViewPortExtension;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontFamily":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_203_HighlightStyle_FontFamily;
                xamlMember.Setter = set_203_HighlightStyle_FontFamily;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontWeight":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontWeight", "Telerik.UI.Xaml.Controls.Input.FontWeightName");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_204_HighlightStyle_FontWeight;
                xamlMember.Setter = set_204_HighlightStyle_FontWeight;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_205_HighlightStyle_FontStyle;
                xamlMember.Setter = set_205_HighlightStyle_FontStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.Foreground":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_206_HighlightStyle_Foreground;
                xamlMember.Setter = set_206_HighlightStyle_Foreground;
                break;
            case "Telerik.UI.Xaml.Controls.Input.HighlightStyle.FontSize":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.HighlightStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_207_HighlightStyle_FontSize;
                xamlMember.Setter = set_207_HighlightStyle_FontSize;
                break;
            case "Telerik.UI.Xaml.Controls.Input.CalendarCellStyle.ContentStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.CalendarCellStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_208_CalendarCellStyle_ContentStyle;
                xamlMember.Setter = set_208_CalendarCellStyle_ContentStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.CalendarCellStyle.DecorationStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.CalendarCellStyle");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "DecorationStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_209_CalendarCellStyle_DecorationStyle;
                xamlMember.Setter = set_209_CalendarCellStyle_DecorationStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector.VerticalLineStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "VerticalLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_210_CalendarTimeRulerItemStyleSelector_VerticalLineStyle;
                xamlMember.Setter = set_210_CalendarTimeRulerItemStyleSelector_VerticalLineStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector.HorizontalLineStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "HorizontalLineStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_211_CalendarTimeRulerItemStyleSelector_HorizontalLineStyle;
                xamlMember.Setter = set_211_CalendarTimeRulerItemStyleSelector_HorizontalLineStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector.TimeLabelStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Input.Calendar.CalendarTimeRulerItemStyleSelector");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "TimeLabelStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_212_CalendarTimeRulerItemStyleSelector_TimeLabelStyle;
                xamlMember.Setter = set_212_CalendarTimeRulerItemStyleSelector_TimeLabelStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.Items":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>");
                xamlMember.Getter = get_213_RadRadialMenu_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ChildItems":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ChildItems", "System.Collections.ObjectModel.ObservableCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem>");
                xamlMember.Getter = get_214_RadialMenuItem_ChildItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ToolTipContent":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ToolTipContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_215_RadialMenuItem_ToolTipContent;
                xamlMember.Setter = set_215_RadialMenuItem_ToolTipContent;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.CommandParameter":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_216_RadialMenuItem_CommandParameter;
                xamlMember.Setter = set_216_RadialMenuItem_CommandParameter;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.IsEnabled":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_217_RadialMenuItem_IsEnabled;
                xamlMember.Setter = set_217_RadialMenuItem_IsEnabled;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Command":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_218_RadialMenuItem_Command;
                xamlMember.Setter = set_218_RadialMenuItem_Command;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ParentItem":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ParentItem", "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember.Getter = get_219_RadialMenuItem_ParentItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.IsSelected":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_220_RadialMenuItem_IsSelected;
                xamlMember.Setter = set_220_RadialMenuItem_IsSelected;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.GroupName":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "GroupName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_221_RadialMenuItem_GroupName;
                xamlMember.Setter = set_221_RadialMenuItem_GroupName;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Selectable":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Selectable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_222_RadialMenuItem_Selectable;
                xamlMember.Setter = set_222_RadialMenuItem_Selectable;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Deselectable":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Deselectable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_223_RadialMenuItem_Deselectable;
                xamlMember.Setter = set_223_RadialMenuItem_Deselectable;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.Header":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_224_RadialMenuItem_Header;
                xamlMember.Setter = set_224_RadialMenuItem_Header;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.IconContent":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IconContent", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_225_RadialMenuItem_IconContent;
                xamlMember.Setter = set_225_RadialMenuItem_IconContent;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem.ContentSectorBackground":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuItem");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ContentSectorBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_226_RadialMenuItem_ContentSectorBackground;
                xamlMember.Setter = set_226_RadialMenuItem_ContentSectorBackground;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.ShowToolTip":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ShowToolTip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_227_RadRadialMenu_ShowToolTip;
                xamlMember.Setter = set_227_RadRadialMenu_ShowToolTip;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.IsOpen":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_228_RadRadialMenu_IsOpen;
                xamlMember.Setter = set_228_RadRadialMenu_IsOpen;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.StartAngle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "StartAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_229_RadRadialMenu_StartAngle;
                xamlMember.Setter = set_229_RadRadialMenu_StartAngle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.InnerNavigationRadiusFactor":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "InnerNavigationRadiusFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_230_RadRadialMenu_InnerNavigationRadiusFactor;
                xamlMember.Setter = set_230_RadRadialMenu_InnerNavigationRadiusFactor;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.InnerRadiusFactor":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "InnerRadiusFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_231_RadRadialMenu_InnerRadiusFactor;
                xamlMember.Setter = set_231_RadRadialMenu_InnerRadiusFactor;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.OuterRadiusFactor":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "OuterRadiusFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_232_RadRadialMenu_OuterRadiusFactor;
                xamlMember.Setter = set_232_RadRadialMenu_OuterRadiusFactor;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.ContentMenuBackgroundStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "ContentMenuBackgroundStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_233_RadRadialMenu_ContentMenuBackgroundStyle;
                xamlMember.Setter = set_233_RadRadialMenu_ContentMenuBackgroundStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.NavigationMenuBackgroundStyle":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "NavigationMenuBackgroundStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_234_RadRadialMenu_NavigationMenuBackgroundStyle;
                xamlMember.Setter = set_234_RadRadialMenu_NavigationMenuBackgroundStyle;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.CommandService":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "CommandService", "Telerik.UI.Xaml.Controls.Primitives.Menu.CommandService");
                xamlMember.Getter = get_235_RadRadialMenu_CommandService;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.Commands":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Commands", "Telerik.UI.Xaml.Controls.Primitives.CommandCollection`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>");
                xamlMember.Getter = get_236_RadRadialMenu_Commands;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>.Owner":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu>");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Owner", "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember.Getter = get_237_AttachableObject_Owner;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu.TargetElement":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadRadialMenu");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "TargetElement", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.Getter = get_238_RadRadialMenu_TargetElement;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior.AttachTriggers":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.RadialMenuTriggerBehavior");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "AttachTriggers", "Telerik.UI.Xaml.Controls.Primitives.RadialMenuAttachTriggers");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_239_RadialMenuTriggerBehavior_AttachTriggers;
                xamlMember.Setter = set_239_RadialMenuTriggerBehavior_AttachTriggers;
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>.Owner":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1<Windows.UI.Xaml.FrameworkElement>");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Owner", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.Getter = get_240_AttachableObject_Owner;
                xamlMember.SetIsReadOnly();
                break;
            case "Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter.Animation":
                userType = (global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Telerik.UI.Xaml.Controls.Primitives.BusyIndicator.BusyIndicatorAnimationAdapter");
                xamlMember = new global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlMember(this, "Animation", "Windows.UI.Xaml.Media.Animation.Storyboard");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_241_BusyIndicatorAnimationAdapter_Animation;
                xamlMember.Setter = set_241_BusyIndicatorAnimationAdapter_Animation;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlSystemBaseType
    {
        global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::TelerikChartTest.TelerikChartTest_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

