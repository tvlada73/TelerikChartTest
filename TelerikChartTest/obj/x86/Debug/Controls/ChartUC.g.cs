#pragma checksum "e:\Documents\Visual Studio 2017\Projects\TelerikChartTest\TelerikChartTest\Controls\ChartUC.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "25CA04204CFE3D44B3344AAC0BEE7123"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TelerikChartTest.Controls
{
    partial class ChartUC : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Telerik_UI_Xaml_Controls_Chart_ChartSeries_ItemsSource(global::Telerik.UI.Xaml.Controls.Chart.ChartSeries obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ChartUC_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IChartUC_Bindings
        {
            private global::TelerikChartTest.Controls.ChartUC dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Telerik.UI.Xaml.Controls.Chart.SplineAreaSeries obj9;
            private global::Telerik.UI.Xaml.Controls.Chart.ExponentialMovingAverageIndicator obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;

            private ChartUC_obj1_BindingsTracking bindingsTracking;

            public ChartUC_obj1_Bindings()
            {
                this.bindingsTracking = new ChartUC_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // Controls\ChartUC.xaml line 84
                        this.obj9 = (global::Telerik.UI.Xaml.Controls.Chart.SplineAreaSeries)target;
                        break;
                    case 10: // Controls\ChartUC.xaml line 98
                        this.obj10 = (global::Telerik.UI.Xaml.Controls.Chart.ExponentialMovingAverageIndicator)target;
                        break;
                    case 11: // Controls\ChartUC.xaml line 44
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // Controls\ChartUC.xaml line 46
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Controls\ChartUC.xaml line 48
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IChartUC_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::TelerikChartTest.Controls.ChartUC)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TelerikChartTest.Controls.ChartUC obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ChartItems(obj.ChartItems, phase);
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ChartItems(global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ChartItems(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\ChartUC.xaml line 84
                    XamlBindingSetters.Set_Telerik_UI_Xaml_Controls_Chart_ChartSeries_ItemsSource(this.obj9, obj, null);
                    // Controls\ChartUC.xaml line 98
                    XamlBindingSetters.Set_Telerik_UI_Xaml_Controls_Chart_ChartSeries_ItemsSource(this.obj10, obj, null);
                }
            }
            private void Update_ViewModel(global::TelerikChartTest.ViewModels.ChartUserControlViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_DateLabel(obj.DateLabel, phase);
                        this.Update_ViewModel_TValue(obj.TValue, phase);
                        this.Update_ViewModel_AvValue(obj.AvValue, phase);
                    }
                }
            }
            private void Update_ViewModel_DateLabel(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\ChartUC.xaml line 44
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                }
            }
            private void Update_ViewModel_TValue(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\ChartUC.xaml line 46
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj.ToString(), null);
                }
            }
            private void Update_ViewModel_AvValue(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\ChartUC.xaml line 48
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj.ToString(), null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ChartUC_obj1_BindingsTracking
            {
                private global::System.WeakReference<ChartUC_obj1_Bindings> weakRefToBindingObj; 

                public ChartUC_obj1_BindingsTracking(ChartUC_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ChartUC_obj1_Bindings>(obj);
                }

                public ChartUC_obj1_Bindings TryGetBindingObject()
                {
                    ChartUC_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ChartItems(null);
                    UpdateChildListeners_ViewModel(null);
                }

                public void DependencyPropertyChanged_ChartItems(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    ChartUC_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::TelerikChartTest.Controls.ChartUC obj = sender as global::TelerikChartTest.Controls.ChartUC;
                        if (obj != null)
                        {
                            bindings.Update_ChartItems(obj.ChartItems, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ChartItems = 0;
                public void UpdateChildListeners_(global::TelerikChartTest.Controls.ChartUC obj)
                {
                    ChartUC_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::TelerikChartTest.Controls.ChartUC.ChartItemsProperty, tokenDPC_ChartItems);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ChartItems = obj.RegisterPropertyChangedCallback(global::TelerikChartTest.Controls.ChartUC.ChartItemsProperty, DependencyPropertyChanged_ChartItems);
                        }
                    }
                }
                public void PropertyChanged_ChartItems(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ChartUC_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ChartItems(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ChartUC_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel> cache_ChartItems = null;
                public void UpdateChildListeners_ChartItems(global::System.Collections.ObjectModel.ObservableCollection<global::TelerikChartTest.Models.ChartModel> obj)
                {
                    if (obj != cache_ChartItems)
                    {
                        if (cache_ChartItems != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ChartItems).PropertyChanged -= PropertyChanged_ChartItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ChartItems).CollectionChanged -= CollectionChanged_ChartItems;
                            cache_ChartItems = null;
                        }
                        if (obj != null)
                        {
                            cache_ChartItems = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ChartItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ChartItems;
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ChartUC_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TelerikChartTest.ViewModels.ChartUserControlViewModel obj = sender as global::TelerikChartTest.ViewModels.ChartUserControlViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_DateLabel(obj.DateLabel, DATA_CHANGED);
                                bindings.Update_ViewModel_TValue(obj.TValue, DATA_CHANGED);
                                bindings.Update_ViewModel_AvValue(obj.AvValue, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "DateLabel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DateLabel(obj.DateLabel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TValue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TValue(obj.TValue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AvValue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_AvValue(obj.AvValue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TelerikChartTest.ViewModels.ChartUserControlViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::TelerikChartTest.ViewModels.ChartUserControlViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 5: // Controls\ChartUC.xaml line 51
                {
                    this.Chart = (global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)(target);
                    ((global::Telerik.UI.Xaml.Controls.Chart.RadCartesianChart)this.Chart).LayoutUpdated += this.Chart_LayoutUpdated;
                }
                break;
            case 6: // Controls\ChartUC.xaml line 55
                {
                    global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior element6 = (global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)(target);
                    ((global::Telerik.UI.Xaml.Controls.Chart.ChartTrackBallBehavior)element6).TrackInfoUpdated += this.ChartTrackBallBehavior_TrackInfoUpdated;
                }
                break;
            case 7: // Controls\ChartUC.xaml line 59
                {
                    this.horizontalAxis = (global::Telerik.UI.Xaml.Controls.Chart.DateTimeContinuousAxis)(target);
                }
                break;
            case 8: // Controls\ChartUC.xaml line 69
                {
                    this.verticalAxis = (global::Telerik.UI.Xaml.Controls.Chart.LinearAxis)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\ChartUC.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    ChartUC_obj1_Bindings bindings = new ChartUC_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

